{"version":3,"sources":["logo.svg","components/StatTooltip.js","components/Stat.js","components/Basics.js","components/DivisionName.js","components/Doctrine.js","components/Technology.js","components/Unit.js","components/Units.js","components/Warnings.js","components/Choices.js","components/Combat.js","components/Upgrade.js","components/Upgrades.js","components/Equipment.js","components/EquipmentList.js","components/SupportEntry.js","components/Support.js","components/TerrainCell.js","components/TerrainRow.js","components/Terrain.js","components/ModSelector.js","components/SaveAndLoadDivision.js","components/Division.js","database/recursivelyMerge.js","database/Unit.js","database/Division.js","database/Equipment.js","database/Country.js","database/Database.js","App.js","index.js"],"names":["module","exports","StatTooltip","data","this","props","base","header","unitData","secondaryHeader","secondaryData","techHeader","techData","className","key","map","index","unit","count","value","name","Component","Stat","tooltipData","Basics","hasData","Choices","divisionName","placeholderName","changeName","type","placeholder","onChange","e","target","Doctrine","handleChange","event","changeDoctrine","db","doctrine","availableDoctrines","val","Technology","changeYear","year","availableYears","Unit","normalizeCount","normalizedCount","parseInt","handleChangeCount","handleChangeType","country","allFrontline","Object","values","unitTypes","filter","combat_width","availableFrontline","availableUnits","min","onBlur","disabled","indexOf","Units","changeUnits","units","newUnits","length","pop","push","Warnings","warnings","warning","Combat","Upgrade","upgrade","newValue","max_level","level","replace","max","Upgrades","upgradeKey","equipment","upgrades","availableUpgradeKeys","equipmentType","availableUpgrades","n","EquipmentList","cost","onUpgradeChange","SupportEntry","checked","onSupportChange","available","selected","shortName","Support","row","TerrainCell","valuePretty","sprintf","TerrainRow","mov","atk","def","charAt","toUpperCase","substr","capitalize","Terrain","ModSelector","changeMod","onClick","SaveAndLoadDivision","state","counter","selection","loadClicked","savedDivisions","onLoad","saveClicked","saved","saveData","window","localStorage","setItem","JSON","stringify","setState","getItem","parse","copyToClipboard","btoa","history","pushState","text","location","toString","navigator","clipboard","writeText","then","console","log","err","error","changeSelection","loadSelection","loadButton","division","Division","modName","dbs","default_year","default_units","support","default_support","changeUpgrade","equipmentKey","newLevel","oldState","handleLoad","savedData","handleSupportChange","company","vanilla","defaultState","hash","dataFromHash","atob","basics","equipmentUsed","combat","terrain","unitsTypes","unitName","supportName","supportUnitTypes","recursivelyMerge","extra","Error","unitType","missingEquipment","Set","Map","equipmentMap","set","fallbackEquipment","fallbackEquipmentMap","add","country_bonuses","unitBonusesfor","stat","keys","group","calculateFromUnitTypeAndBonus","hp","supply_use","calculateFromEquipmentAndBonusMult","factor","own_equipment_fuel_consumption_mult","fuel_consumption","manpower","training_time","weight","special_forces","can_be_parachuted","org","recovery_rate","result","build_cost_ic","equipmentSpeeds","maximum_speed","s","Math","terrain_bonuses","sum","avg","round3","x","round","round6","cleanupReport","report","v","k","t","formatSpeed","speed","tooltipForSpeed","tooltipForSum","tooltipForOrganization","tooltipForRecoveryRate","suppression","tooltipForSuppression","tooltipForSupplyUse","fuel_use","tooltipForFuelUse","fuel_capacity","recon","entrenchment","tooltipForEntrenchment","reliability_factor","casualty_trickleback","experience_loss_factor","tooltipForCanBeParachuted","tooltipForSpecialForces","tooltipForTrainingTime","ic_cost","soft_attack","hard_attack","air_attack","defense","breakthrough","armor","tooltipForArmor","piercing","tooltipForPiercing","hardness","tooltipForHardness","initiative","equipment_capture_factor","bonuses","sort","bonus","movement","attack","defence","groupUnitStats","frontlineValues","is_frontline","supportValues","baseValue","reduce","a","b","bonusValue","frontline_units","every","format","forEach","eq","frontline_count","support_count","support_units","infantry","u","mobile","armored","brigades","ceil","field","has","get","divisionBonuses","techBonusesFor","technologies","tech","groupFrontlineUnitStats","suppression_factor","supply_consumption_factor","fuel_consumption_factor","unit_hardness","otherCount","terrains","terrainBonusfor","upgradableStats","Equipment","variantBonus","calculateVariantBonus","available_upgrades","upgradeValue","Country","calculateEquipmentMap","calculateDivisionBonuses","enabledEquipmentTypes","equipmentTypes","archetype","enabledSubunits","enabledEquipmentArchetypes","active","i","categories","technology","category","unit_bonuses","max_dig_in","army_speed_factor","enable_subunits","enable_equipments","mods","kaiserreich","Database","mod","doctrines","calculateFallbackEquipmentMap","years","start_year","techs","technologiesForYear","technologiesForDoctrine","App","src","logo","alt","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d16ba24.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\n\nexport default class StatTooltip extends Component {\n  render() {\n    let { data } = this.props;\n    if (!data) {\n      return null;\n    }\n    let { base, header, unitData, secondaryHeader, secondaryData, techHeader, techData } = data;\n    return <div className=\"stat-tooltip\">\n      <div>{ header }</div>\n      <table>\n        <tbody>\n          { (base != null) ?\n            <tr key=\"base\">\n              <td className=\"substat-count\"></td>\n              <td className=\"substat-name\">Base</td>\n              <td className=\"substat-value\">{base}</td>\n            </tr>\n            : null\n          }\n          { unitData.map(({unit, count, value}, index) => (\n            <tr key={index}>\n              <td className=\"substat-count\">{count}x</td>\n              <td className=\"substat-name\">{unit.name}</td>\n              <td className=\"substat-value\">{value}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      { secondaryHeader && <div>{ secondaryHeader }</div> }\n      { secondaryData && <table>\n        <tbody>\n          { secondaryData.map(({unit, count, value}, index) => (\n            <tr key={index}>\n              <td className=\"substat-count\">{count}x</td>\n              <td className=\"substat-name\">{unit.name}</td>\n              <td className=\"substat-value\">{value}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      }\n      { techHeader && <div>{ techHeader }</div> }\n      { techData && <table>\n        <tbody>\n          { techData.map(({name, value}, index) => (\n            <tr key={index}>\n              <td className=\"substat-count\"></td>\n              <td className=\"substat-name\">{name}</td>\n              <td className=\"substat-value\">{value}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      }\n\n    </div>\n  }\n}\n","import React, { Component } from \"react\";\nimport StatTooltip from \"./StatTooltip\";\n\nexport default class Stat extends Component {\n  render() {\n    let { name, value, tooltipData } = this.props;\n    return <li className=\"stat\">\n      <span className=\"stat-name\">{name}</span>\n      <span className=\"stat-value\">{value}</span>\n      <StatTooltip data={tooltipData} />\n    </li>\n  }\n}\n","import React, { Component } from \"react\";\nimport Stat from \"./Stat\";\n\nexport default class Basics extends Component {\n  render() {\n    let { data, hasData } = this.props;\n    if (!hasData) {\n      return <div className=\"basics\">\n        <h4>Basics</h4>\n        <div>Division has no units</div>\n      </div>\n    }\n    return <div className=\"basics\">\n      <h4>Basics</h4>\n      <ul>\n        {\n          data.map(([name, value, tooltipData]) => <Stat key={name} {...{name, value, tooltipData}} />)\n        }\n      </ul>\n    </div>\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Choices extends Component {\n  render() {\n    let { divisionName, placeholderName, changeName } = this.props;\n    return <div>\n      <h4>Name</h4>\n      <input type=\"text\" value={divisionName} placeholder={placeholderName} onChange={(e) => changeName(e.target.value)}/>\n    </div>\n  }\n}\n","import React, { Component, Fragment } from \"react\";\n\nexport default class Doctrine extends Component {\n  handleChange = (event) => {\n    let value = event.target.value;\n    this.props.changeDoctrine(value);\n  }\n  render() {\n    let {db, doctrine} = this.props;\n    return <Fragment>\n      <h4>Doctrine</h4>\n      <select value={doctrine || \"\"} onChange={this.handleChange}>\n        <option value=\"\" key=\"\">-</option>\n        {\n          db.availableDoctrines().map(val => <option key={val} value={val}>{val}</option>)\n        }\n      </select>\n    </Fragment>\n  }\n}\n\n","import React, { Component, Fragment } from \"react\";\n\nexport default class Technology extends Component {\n  handleChange = (event) => {\n    let value = event.target.value;\n    this.props.changeYear(value);\n  }\n  render() {\n    let {db, year} = this.props;\n    return <Fragment>\n      <h4>Technology</h4>\n      <select value={year || \"\"} onChange={this.handleChange}>\n        <option value=\"\" key=\"\">-</option>\n        {\n          db.availableYears().map(val => <option key={val} value={val}>{val}</option>)\n        }\n      </select>\n    </Fragment>\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Unit extends Component {\n  normalizeCount = (event) => {\n    let {index, unit, onChange} = this.props;\n    let [count, type] = unit;\n    let normalizedCount = parseInt(count, 10);\n    if (count !== normalizedCount) {\n      onChange(index, [normalizedCount, type]);\n    }\n  }\n\n  handleChangeCount = (event) => {\n    let count = event.target.value;\n    // A hack to convert once done, but still allow temporary bad values like \"\"\n    if (count === \"\"+parseInt(count, 10)) {\n      count = parseInt(count, 10);\n    }\n    let {index, unit, onChange} = this.props;\n    let type = unit[1];\n    onChange(index, [count, type]);\n  }\n  handleChangeType = (event) => {\n    let type = event.target.value;\n    let {index, unit, onChange} = this.props;\n    let count = unit[0];\n    onChange(index, [count, type]);\n  }\n  render() {\n    let {country, unit} = this.props;\n    let [count, type] = unit;\n\n    let allFrontline = Object.values(country.db.unitTypes).filter(unit => unit.combat_width > 0);\n    let availableFrontline = country.availableUnits().filter(unit => unit.combat_width > 0).map(unit => unit.key);\n\n    return <div className=\"unit-select\">\n      <input type=\"number\" min=\"0\" value={\"\"+count} onChange={this.handleChangeCount} onBlur={this.normalizeCount} />\n      <select value={type} onChange={this.handleChangeType}>\n        {\n          allFrontline.map(unit => <option disabled={availableFrontline.indexOf(unit.key) === -1} key={unit.key} value={unit.key}>{unit.name}</option> )\n        }\n      </select>\n    </div>\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport Unit from \"./Unit\";\n\nexport default class Units extends Component {\n  handleChange = (index, unit) => {\n    let {changeUnits, units} = this.props;\n    let newUnits = [...units];\n    newUnits[index] = unit;\n\n    // Try to maintain just one empty slot\n    while (\n      newUnits.length >= 2 &&\n      newUnits[newUnits.length-1][0] === 0 &&\n      newUnits[newUnits.length-2][0] === 0\n    ) {\n      newUnits.pop();\n    }\n    if (newUnits[newUnits.length-1][0] !== 0) {\n      newUnits.push([0, \"infantry\"]);\n    }\n    changeUnits(newUnits);\n  }\n\n  render() {\n    let {db, country, units} = this.props;\n    return <Fragment>\n      <h4>Battalions</h4>\n      {\n        units.map((unit, index) => (\n          <Unit {...{db, unit, country}} key={index} index={index} onChange={this.handleChange} />\n        ))\n      }\n    </Fragment>\n  }\n}\n","import React, { Component, Fragment } from \"react\";\n\nexport default class Warnings extends Component {\n  render() {\n    let {warnings} = this.props;\n    if (warnings.length === 0) {\n      return null;\n    }\n\n    return <Fragment>\n      <h4>Warnings</h4>\n      {\n        warnings.map((warning, index) => (\n          <div key={index} className=\"alert alert-danger\">{warning}</div>\n        ))\n      }\n    </Fragment>\n  }\n}\n","import React, { Component } from \"react\";\nimport DivisionName from \"./DivisionName\";\nimport Doctrine from \"./Doctrine\";\nimport Technology from \"./Technology\";\nimport Units from \"./Units\";\nimport Warnings from \"./Warnings\";\n\nexport default class Choices extends Component {\n  render() {\n    let {db, country, year, doctrine, units, warnings, changeYear, changeDoctrine, changeUnits, divisionName, placeholderName, changeName} = this.props;\n    return <div className=\"choices\">\n      <DivisionName {...{divisionName, placeholderName, changeName}} />\n      <Technology {...{db, year, changeYear}} />\n      <Doctrine {...{db, doctrine, changeDoctrine}} />\n      <Units {...{db, country, units, changeUnits}} />\n      <Warnings {...{warnings}} />\n    </div>\n  }\n}\n","import React, { Component } from \"react\";\nimport Stat from \"./Stat\";\n\nexport default class Combat extends Component {\n  render() {\n    let { data, hasData } = this.props;\n    if (!hasData) {\n      return <div className=\"combat\">\n        <h4>Basics</h4>\n        <div>Division has no units</div>\n      </div>\n    }\n\n    return <div className=\"combat\">\n      <h4>Combat</h4>\n      <ul>\n        {\n          data.map(([name, value, tooltipData]) => <Stat key={name} {...{name, value, tooltipData}} />)\n        }\n      </ul>\n    </div>\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Upgrade extends Component {\n  handleChange = (event) => {\n    let {upgrade, onChange} = this.props;\n    let newValue = parseInt(event.target.value, 10);\n    if (newValue < 0) {\n      newValue = 0;\n    }\n    if (newValue > upgrade.max_level) {\n      newValue = upgrade.max_level;\n    }\n    onChange(upgrade.key, newValue);\n  }\n\n  render() {\n    let {upgrade, level} = this.props;\n    let name = upgrade.name.replace(/ Armament/, \"\");\n\n    return <div className=\"upgrade\">\n      {name}\n      <input type=\"number\" min={0} max={upgrade.max_level} value={level} onChange={this.handleChange}/>\n    </div>\n  }\n}\n","import React, { Component } from \"react\";\nimport Upgrade from \"./Upgrade\";\n\nexport default class Upgrades extends Component {\n  handleChange = (upgradeKey, newValue) => {\n    let {equipment,onChange} = this.props;\n    onChange(equipment.key, upgradeKey, newValue);\n  }\n\n  render() {\n    let {equipment,upgrades} = this.props;\n    let availableUpgradeKeys = equipment.equipmentType.upgrades || [];\n    if (!availableUpgradeKeys.length) {\n      return null;\n    }\n    let db = equipment.db;\n    let availableUpgrades = availableUpgradeKeys.map(n => db.upgrades[n]);\n\n    return <div>\n      {\n        availableUpgrades.map(upgrade => (\n          <Upgrade key={upgrade.key} upgrade={upgrade} level={upgrades[upgrade.key] || 0} onChange={this.handleChange} />\n        ))\n      }\n    </div>\n  }\n}\n","import React, { Component } from \"react\";\nimport Upgrades from \"./Upgrades\";\n\nexport default class EquipmentList extends Component {\n  render() {\n    let {equipment, count, cost, upgrades, onUpgradeChange} = this.props;\n\n    return <li key={equipment.key}>\n      <div className=\"equipment-count\">\n        <span>{equipment.name}</span>\n        <span>{count} ({cost})</span>\n      </div>\n      <Upgrades equipment={equipment} upgrades={upgrades} onChange={onUpgradeChange} />\n    </li>\n  }\n}\n\n","import React, { Component } from \"react\";\nimport Equipment from \"./Equipment\";\n\nexport default class EquipmentList extends Component {\n  render() {\n    let {data, hasData, upgrades, onUpgradeChange} = this.props;\n    if (!hasData) {\n      return <div className=\"equipment-list\">\n        <h4>Equipment</h4>\n        <div>Division has no units</div>\n      </div>\n    }\n\n    return <div className=\"equipment-list\">\n      <h4>Equipment</h4>\n      <ul>\n        {\n          data.map(([equipment, count, cost]) =>\n            <Equipment {...{equipment, count, cost, onUpgradeChange}} key={equipment.key} upgrades={upgrades[equipment.key] || {}} />\n          )\n        }\n      </ul>\n    </div>\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class SupportEntry extends Component {\n  handleChange = (event) => {\n    let value = event.target.checked;\n    let {data, onSupportChange} = this.props;\n    onSupportChange(data.key, value);\n  }\n  render() {\n    let {data} = this.props;\n    let {name, available, selected} = data;\n    let shortName = name.replace(/^Support /, \"\").replace(/ Company$/, \"\");\n    return <div className={available ? \"checkbox\" : \"checkbox disabled\"} >\n      <label className=\"control-label\">\n        <input type=\"checkbox\" checked={selected} disabled={!available} onChange={this.handleChange} />\n        {shortName}\n      </label>\n    </div>;\n  }\n}\n","import React, { Component } from \"react\";\nimport SupportEntry from \"./SupportEntry\";\n\nexport default class Support extends Component {\n  render() {\n    let {data, onSupportChange} = this.props;\n    return <div className=\"support\">\n      <h4>Support</h4>\n      <div className=\"list\">\n        {\n          data.map((row, index) =>\n            <SupportEntry key={index} data={row} onSupportChange={onSupportChange} />\n          )\n        }\n      </div>\n    </div>;\n  }\n}\n","import React, { Component } from \"react\";\nimport {sprintf} from \"sprintf-js\";\nimport StatTooltip from \"./StatTooltip\";\n\nexport default class TerrainCell extends Component {\n  render() {\n    let {value, tooltipData} = this.props.data;\n\n    if (!tooltipData) {\n      return <td></td>;\n    }\n\n    let className = (value >= 0) ? \"bonus stat-value\" : \"penalty stat-value\";\n    let valuePretty = sprintf(\"%+.1f%%\", value*100);\n\n    return <td className=\"terrain-cell\">\n      <span className={className}>{valuePretty}</span>\n      <StatTooltip data={tooltipData} />\n    </td>\n  }\n}\n","import React, { Component } from \"react\";\nimport TerrainCell from \"./TerrainCell\";\n\nlet capitalize = (name) => {\n  return name.charAt(0).toUpperCase() + name.substr(1);\n}\n\nexport default class TerrainRow extends Component {\n  render() {\n    let [name, mov, atk, def] = this.props.data;\n    return <tr>\n      <td>{capitalize(name)}</td>\n      <TerrainCell data={mov} />\n      <TerrainCell data={atk} />\n      <TerrainCell data={def} />\n    </tr>\n  }\n}\n","import React, { Component } from \"react\";\nimport TerrainRow from \"./TerrainRow\";\n\nexport default class Terrain extends Component {\n  render() {\n    let { data } = this.props;\n    if (data.length === 0) {\n      return <div className=\"terrain\">\n        <h4>Terrain</h4>\n        <div>Division has no terrain bonuses</div>\n      </div>\n    }\n\n    return <div className=\"terrain\">\n      <h4>Terrain</h4>\n      <table>\n        <thead>\n          <tr>\n            <th>Terrain</th>\n            <th>Movement</th>\n            <th>Attack</th>\n            <th>Defense</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            data.map((row, index) => <TerrainRow data={row} key={index}/>)\n          }\n        </tbody>\n      </table>\n    </div>\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class ModSelector extends Component {\n  render() {\n    let {changeMod} = this.props;\n    return <div className=\"mod-selector\">\n      <span>Switch mod:</span>\n      <button className=\"btn btn-primary\" onClick={() => changeMod(\"vanilla\")}>Vanilla (1.9.1)</button>\n      <button className=\"btn btn-primary\" onClick={() => changeMod(\"kaiserreich\")}>Kaiserreich (1.9.1)</button>\n    </div>\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class SaveAndLoadDivision extends Component {\n  state = {\n    counter: 1,\n    selection: 0,\n  }\n  loadClicked = () => {\n    let saved = this.savedDivisions();\n    let selected = saved[this.state.selection];\n    this.props.onLoad(selected);\n  }\n  saveClicked = () => {\n    let saved = this.savedDivisions();\n    saved.push(this.props.saveData);\n    window.localStorage.setItem(\"saved-hoi4-divisions\", JSON.stringify(saved));\n    // Force refresh\n    this.setState({counter: this.state.counter + 1, selection: 0});\n  }\n  savedDivisions = () => {\n    let saved = window.localStorage.getItem(\"saved-hoi4-divisions\");\n    if (!saved) {\n      return [];\n    } else {\n      return JSON.parse(saved);\n    }\n  }\n  copyToClipboard = () => {\n    let data = btoa(JSON.stringify(this.props.saveData));\n    window.history.pushState(null, null, \"#\" + data);\n    let text = window.location.toString();\n    navigator.clipboard.writeText(text).then(function() {\n      console.log('Async: Copying to clipboard was successful!');\n    }, function(err) {\n      console.error('Async: Could not copy text: ', err);\n    });\n  }\n  changeSelection = (event) => {\n    this.setState({selection: event.target.value});\n  }\n  render() {\n    let saved = this.savedDivisions();\n    let loadSelection, loadButton;\n    if (saved.length >= 1) {\n      loadSelection = <select value={this.state.selection} onChange={this.changeSelection}>\n        {\n          saved.map((division, key) => (\n            <option key={key} value={key}>{ division.divisionName || `Division ${key+1}` }</option>\n          ))\n        }\n      </select>\n      loadButton = <button className=\"btn btn-primary\" onClick={this.loadClicked}>Load division</button>\n    }\n    return (\n      <div className=\"save-and-load-controls\">\n        <button className=\"btn btn-primary\" onClick={this.saveClicked}>Save division</button>\n        <button className=\"btn btn-primary\" onClick={this.copyToClipboard}>Copy to Clipboard</button>\n        { loadSelection }\n        { loadButton }\n      </div>\n    )\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport Basics from \"./Basics\";\nimport Choices from \"./Choices\";\nimport Combat from \"./Combat\";\nimport EquipmentList from \"./EquipmentList\";\nimport Support from \"./Support\";\nimport Terrain from \"./Terrain\";\nimport ModSelector from \"./ModSelector\";\nimport SaveAndLoadDivision from \"./SaveAndLoadDivision\";\n\nexport default class Division extends Component {\n  constructor(props) {\n    super(props);\n    let {dbs} = props;\n    this.dbs = dbs;\n    let db = this.dbs.vanilla;\n\n    let defaultState = {\n      modName: \"vanilla\",\n      year: db.default_year,\n      doctrine: null,\n      units: db.default_units,\n      support: db.default_support,\n      upgrades: {},\n      divisionName: \"\",\n    }\n\n    if (window.location.hash) {\n      try {\n        console.log(\"PLEASE LOAD\", window.location.hash)\n        let dataFromHash = JSON.parse(atob(window.location.hash.substr(1)));\n        defaultState = {...defaultState, ...dataFromHash};\n      } catch(err) {\n        console.log(\"Couldn't load division from hash\")\n      }\n    }\n\n    this.state = defaultState;\n  }\n  get db() {\n    return this.dbs[this.state.modName];\n  }\n  changeMod = (modName) => {\n    let db = this.dbs[modName];\n    this.setState({\n      modName: modName,\n      year: db.default_year,\n      doctrine: null,\n      units: db.default_units,\n      support: db.default_support,\n      upgrades: {},\n      divisionName: \"\",\n    })\n  }\n  changeYear = (year) => {\n    this.setState({year});\n  }\n  changeDoctrine = (doctrine) => {\n    this.setState({doctrine});\n  }\n  changeUnits = (units) => {\n    this.setState({units});\n  }\n  changeName = (divisionName) => {\n    this.setState({divisionName});\n  }\n  changeUpgrade = (equipmentKey, upgradeKey, newLevel) => {\n    this.setState(oldState => ({\n      upgrades: {\n        ...oldState.upgrades,\n        [equipmentKey]: {\n          ...(oldState.upgrades[equipmentKey] || {}),\n          [upgradeKey]: newLevel,\n        },\n      },\n    }));\n  }\n  handleLoad = (savedData) => {\n    this.setState(savedData);\n  }\n  render() {\n    let db = this.db;\n    let placeholderName = \"My Division\";\n    let {year, doctrine, units, upgrades, divisionName} = this.state;\n    let {changeYear, changeDoctrine, changeUnits, changeName} = this;\n    let country = this.country();\n    let division = this.division();\n    let warnings = division.warnings();\n    let hasData = (division.units.length !== 0);\n\n    return <Fragment>\n      <div className=\"division-box\">\n        <Choices {...{db, country, year, doctrine, units, changeYear, changeDoctrine, changeUnits, warnings, divisionName, placeholderName, changeName}} />\n        <Support data={this.support()} onSupportChange={this.handleSupportChange} />\n        <Basics data={division.basics()} hasData={hasData} />\n        <EquipmentList data={division.equipmentUsed()} hasData={hasData} upgrades={upgrades} onUpgradeChange={this.changeUpgrade} />\n        <Combat data={division.combat()}  hasData={hasData} />\n        <Terrain data={division.terrain()}/>\n      </div>\n      <ModSelector changeMod={this.changeMod} />\n      <SaveAndLoadDivision onLoad={this.handleLoad} saveData={this.state} />\n    </Fragment>\n  }\n  handleSupportChange = (company, state) => {\n    let {support} = this.state;\n    support = {...support, [company]: state};\n    this.setState({support});\n  }\n  country() {\n    let {year, doctrine, upgrades} = this.state;\n    let db = this.db;\n    return db.country(year, doctrine, upgrades);\n  }\n  division() {\n    let {units, support} = this.state;\n    let unitsTypes = {};\n    let country = this.country();\n    for (let [count, unitName] of units) {\n      if (count) {\n        unitsTypes[unitName] = (unitsTypes[unitName] || 0) + parseInt(count, 10);\n      }\n    }\n    for (let supportName in support) {\n      if (support[supportName]) {\n        unitsTypes[supportName] = 1;\n      }\n    }\n    return country.division(unitsTypes);\n  }\n\n  support() {\n    let db = this.db;\n    let { support } = this.state;\n    let unitTypes = db.unitTypes;\n    let supportUnitTypes = db.supportUnitTypes();\n    let country = this.country();\n    let available = country.availableUnits().map((unit) => unit.key);\n    return supportUnitTypes.map((key) => ({\n      key,\n      name: unitTypes[key].name,\n      available: (available.indexOf(key) !== -1),\n      selected: !!(support[key]),\n    }))\n  }\n}\n","let recursivelyMerge = (base, extra) => {\n  for (let key in extra) {\n    let val = extra[key];\n    if (key in base) {\n      if (typeof(val) === \"object\") {\n        if (typeof(base[key]) !== \"object\") {\n          throw new Error(\"Incompatible merge\")\n        }\n        recursivelyMerge(base[key], val)\n      } else if (typeof(val) === \"number\") {\n        if (typeof(base[key]) !== \"number\") {\n          throw new Error(\"Incompatible merge\")\n        }\n        base[key] = base[key] + val;\n      } else {\n        throw new Error(\"Not sure how to merge\")\n      }\n    } else {\n      if (typeof(val) === \"object\") {\n        base[key] = {};\n        recursivelyMerge(base[key], val)\n      } else if (typeof(val) === \"number\") {\n        base[key] = val;\n      } else {\n        throw new Error(\"Not sure how to merge\")\n      }\n    }\n  }\n}\n\nexport default recursivelyMerge;\n","import recursivelyMerge from \"./recursivelyMerge\";\n\nexport default class Unit {\n  constructor(unitType, country) {\n    this.unitType = unitType;\n    this.country = country;\n\n    this.missingEquipment = new Set();\n    this.equipment = new Map();\n    for (let name in unitType.equipment) {\n      let count = unitType.equipment[name];\n      let equipment = country.equipmentMap[name];\n      if (equipment) {\n        this.equipment.set(equipment, count);\n      } else {\n        let fallbackEquipment = country.db.fallbackEquipmentMap[name];\n        if (!fallbackEquipment) {\n          throw new Error(`Can't find ${name}`);\n        }\n        this.equipment.set(fallbackEquipment, count);\n        this.missingEquipment.add(fallbackEquipment.name);\n      }\n    }\n    this.country_bonuses = country.unitBonusesfor(unitType.key);\n  }\n\n  get group() {\n    return this.unitType.group;\n  }\n\n  get suppression() {\n    return this.calculateFromUnitTypeAndBonus(\"suppression\");\n  }\n\n  get suppression_factor() {\n    return this.calculateFromUnitTypeAndBonus(\"suppression_factor\");\n  }\n\n  get hp() {\n    return this.unitType.hp;\n  }\n\n  get supply_use() {\n    return this.unitType.supply_use;\n  }\n\n  get fuel_consumption() {\n    let base = this.calculateFromEquipmentAndBonusMult(\"fuel_consumption\");\n    let factor = this.unitType.own_equipment_fuel_consumption_mult;\n    if (factor == null) {\n      factor = 1;\n    }\n    return base * factor;\n  }\n\n  get fuel_capacity() {\n    return 28.8 * this.fuel_consumption;\n  }\n\n  get manpower() {\n    return this.unitType.manpower;\n  }\n\n  get training_time() {\n    return this.unitType.training_time;\n  }\n\n  get weight() {\n    return this.unitType.weight;\n  }\n\n  get special_forces() {\n    return this.unitType.special_forces;\n  }\n\n  get can_be_parachuted() {\n    return this.unitType.can_be_parachuted;\n  }\n\n  get name() {\n    return this.unitType.name;\n  }\n\n  get org() {\n    let base = this.unitType.org;\n    return base + (this.country_bonuses[\"max_organisation\"] || 0)\n  }\n\n  get recovery_rate() {\n    let base = this.unitType.recovery_rate;\n    return base + (this.country_bonuses[\"default_morale\"] || 0)\n  }\n\n  get reliability_factor() {\n    return this.calculateFromUnitTypeAndBonus(\"reliability_factor\");\n  }\n\n  get casualty_trickleback() {\n    return this.calculateFromUnitTypeAndBonus(\"casualty_trickleback\");\n  }\n\n  get experience_loss_factor() {\n    return this.calculateFromUnitTypeAndBonus(\"experience_loss_factor\");\n  }\n\n  get initiative() {\n    return this.calculateFromUnitTypeAndBonus(\"initiative\");\n  }\n\n  get equipment_capture_factor() {\n    return this.calculateFromUnitTypeAndBonus(\"equipment_capture_factor\")\n  }\n\n  get supply_consumption_factor() {\n    return this.calculateFromUnitTypeAndBonus(\"supply_consumption_factor\")\n  }\n\n  get fuel_consumption_factor() {\n    return this.calculateFromUnitTypeAndBonus(\"fuel_consumption_factor\")\n  }\n\n  get combat_width() {\n    return this.calculateFromUnitTypeAndBonus(\"combat_width\");\n  }\n\n  get is_frontline() {\n    return this.combat_width > 0;\n  }\n\n  get recon() {\n    return this.calculateFromUnitTypeAndBonus(\"recon\")\n  }\n\n  get entrenchment() {\n    return this.calculateFromUnitTypeAndBonus(\"entrenchment\")\n  }\n\n  get soft_attack() {\n    return this.calculateFromEquipmentAndBonusMult(\"soft_attack\")\n  }\n\n  get hard_attack() {\n    return this.calculateFromEquipmentAndBonusMult(\"hard_attack\")\n  }\n\n  get air_attack() {\n    return this.calculateFromEquipmentAndBonusMult(\"air_attack\")\n  }\n\n  get defense() {\n    return this.calculateFromEquipmentAndBonusMult(\"defense\")\n  }\n\n  get breakthrough() {\n    return this.calculateFromEquipmentAndBonusMult(\"breakthrough\")\n  }\n\n  get piercing() {\n    return this.calculateFromEquipmentAndBonusMult(\"ap_attack\")\n  }\n\n  get armor() {\n    // never any bonus, but doesn't hurt\n    return this.calculateFromEquipmentAndBonusMult(\"armor_value\")\n  }\n\n  get hardness() {\n    return this.calculateFromEquipmentAndBonusMult(\"hardness\")\n  }\n\n  calculateFromUnitTypeAndBonus(stat) {\n    let base = this.unitType[stat] || 0;\n    return base + (this.country_bonuses[stat] || 0)\n  }\n\n  calculateFromEquipmentAndBonus(stat) {\n    let base = 0;\n    for (let equipment of this.equipment.keys()) {\n      base += equipment[stat];\n    }\n    return base + (this.country_bonuses[stat] || 0)\n  }\n\n  calculateFromEquipmentAndBonusMult(stat) {\n    let base = 0;\n    for (let equipment of this.equipment.keys()) {\n      base += (equipment[stat] || 0);\n    }\n\n    return base * (1 + (this.unitType[stat] || 0) + (this.country_bonuses[stat] || 0))\n  }\n\n  get ic_cost() {\n    let result = 0;\n    for (let [equipment, count] of this.equipment) {\n      result += equipment.build_cost_ic * count;\n    }\n    return result;\n  }\n\n  get speed() {\n    // Unclear what to do when multiply types are used. Mot uses mot(12)+inf(4)\n    let equipment = [...this.equipment.keys()]\n    let equipmentSpeeds = equipment.map(e => e.maximum_speed).filter(s => s);\n    let equipmentSpeed = equipmentSpeeds.length ? Math.max(...equipmentSpeeds) : 4.0;\n    return equipmentSpeed * (1 + this.unitType.maximum_speed || 0)\n  }\n\n  get terrain_bonuses() {\n    let result = {};\n    recursivelyMerge(result, this.unitType.terrain_bonuses);\n    if (this.country_bonuses.terrain_bonuses) {\n      recursivelyMerge(result, this.country_bonuses.terrain_bonuses);\n    }\n    return result;\n  }\n}\n","import {sprintf} from \"sprintf-js\";\n\nfunction sum(values) {\n  let result = 0;\n  for (let value of values) {\n    result += value;\n  }\n  return result;\n}\n\nfunction max(values) {\n  return Math.max(...values);\n}\n\nfunction min(values) {\n  return Math.min(...values);\n}\n\nfunction avg(values) {\n  if (values.length === 0) return;\n  return sum(values) / values.length;\n}\n\nfunction round3(x) {\n  return Math.round(x * 1000) / 1000;\n}\n\nfunction round6(x) {\n  return Math.round(x * 1000000) / 1000000;\n}\n\nfunction cleanupReport(report) {\n  report = report.filter(([k,v,t]) => (v !== 0));\n  return report.map(([k,v,t]) => {\n    if (typeof(v) === \"number\") {\n      return [k,round6(v),t];\n    } else {\n      return [k,v,t];\n    }\n  })\n}\n\nfunction formatSpeed(value) {\n  if (!value) {\n    return 0;\n  }\n  return sprintf(\"%.1f km/h\", value);\n}\n\nexport default class Division {\n  constructor(country, units) {\n    this.country = country;\n    this.units = units;\n  }\n\n  // Gather related numbers for frontend\"s convenience\n  // This is sort of UI responsibility\n  basics() {\n    return cleanupReport([\n      [\"Speed\", formatSpeed(this.speed), this.tooltipForSpeed()],\n      [\"HP\", this.hp, this.tooltipForSum(\"hp\")],\n      [\"Organization\", this.org, this.tooltipForOrganization()],\n      [\"Recovery rate\", this.recovery_rate, this.tooltipForRecoveryRate()],\n      [\"Suppression\", this.suppression, this.tooltipForSuppression()],\n      [\"Weight\", this.weight, this.tooltipForSum(\"weight\")],\n      [\"Supply Use\", this.supply_use, this.tooltipForSupplyUse()],\n      [\"Fuel Use\", this.fuel_use, this.tooltipForFuelUse()],\n      [\"Fuel Capacity\", this.fuel_capacity, this.tooltipForSum(\"fuel_capacity\")],\n      [\"Recon\", this.recon, this.tooltipForSum(\"recon\")],\n      [\"Entrenchment\", this.entrenchment, this.tooltipForEntrenchment()],\n      [\"Reliability\", this.reliability_factor, this.tooltipForSum(\"reliability_factor\")],\n      [\"Casualty trickleback\", this.casualty_trickleback, this.tooltipForSum(\"casualty_trickleback\")],\n      [\"XP Loss\", this.experience_loss_factor, this.tooltipForSum(\"experience_loss_factor\")],\n      [\"Can be parachuted\", this.can_be_parachuted, this.tooltipForCanBeParachuted()],\n      [\"Special forces\", this.special_forces, this.tooltipForSpecialForces()],\n      [\"Manpower\", this.manpower, this.tooltipForSum(\"manpower\")],\n      [\"Training Time\", `${this.training_time} days`, this.tooltipForTrainingTime()],\n      [\"IC Cost\", this.ic_cost, this.tooltipForSum(\"ic_cost\")],\n    ])\n  }\n\n  equipmentUsed() {\n    let result = [];\n    for (let [equipment, count] of this.equipment) {\n      if (count > 0) {\n        result.push([equipment, count, round6(equipment.build_cost_ic * count)]);\n      }\n    }\n    return result;\n  }\n\n  combat() {\n    return cleanupReport([\n      [\"Soft Attack\", this.soft_attack, this.tooltipForSum(\"soft_attack\")],\n      [\"Hard Attack\", this.hard_attack, this.tooltipForSum(\"hard_attack\")],\n      [\"Air Attack\", this.air_attack, this.tooltipForSum(\"air_attack\")],\n      [\"Defense\", this.defense, this.tooltipForSum(\"defense\")],\n      [\"Breakthrough\", this.breakthrough, this.tooltipForSum(\"breakthrough\")],\n      [\"Armor\", this.armor, this.tooltipForArmor()],\n      [\"Piercing\", this.piercing, this.tooltipForPiercing()],\n      [\"Combat width\", this.combat_width, this.tooltipForSum(\"combat_width\")],\n      [\"Hardness\", sprintf(\"%.1f %%\", 100*this.hardness), this.tooltipForHardness()],\n      [\"Initiative\", this.initiative, this.tooltipForSum(\"initiative\")],\n      [\"Equipment Capture\", this.equipment_capture_factor, this.tooltipForSum(\"equipment_capture_factor\")],\n    ])\n  }\n\n  terrain() {\n    let bonuses = this.terrain_bonuses;\n    return Object.keys(bonuses).sort().map(name => {\n      let bonus = bonuses[name];\n      return [name, bonus.movement, bonus.attack, bonus.defence];\n    })\n  }\n\n  // Individual numbers\n  get manpower() {\n    return sum(this.units.map(u => u.manpower))\n  }\n\n  get training_time() {\n    return max(this.units.map(u => u.training_time))\n  }\n\n  get combat_width() {\n    return sum(this.units.map(u => u.combat_width))\n  }\n\n  get hp() {\n    return sum(this.units.map(u => u.hp))\n  }\n\n  get org() {\n    return round3(avg(this.units.map(u => u.org)))\n  }\n\n  get weight() {\n    return sum(this.units.map(u => u.weight))\n  }\n\n  get recovery_rate() {\n    return round3(avg(this.units.map(u => u.recovery_rate)))\n  }\n\n  get suppression() {\n    let base = sum(this.units.map(u => u.suppression));\n    let factor = sum(this.units.map(u => u.suppression_factor));\n    return round6(base * (1+factor));\n  }\n\n  get supply_use() {\n    let base = sum(this.units.map(u => u.supply_use));\n    let unit_factor = sum(this.units.map(u => u.supply_consumption_factor));\n    let doctrine_factor = this.country.divisionBonuses[\"supply_consumption_factor\"] || 0;\n    return round6(base * (1+unit_factor) * (1+doctrine_factor));\n  }\n\n  get fuel_use() {\n    let base = sum(this.units.map(u => u.fuel_consumption));\n    let factor = sum(this.units.map(u => u.fuel_consumption_factor));\n    return round6(base * (1+factor));\n  }\n\n  get fuel_capacity() {\n    // It's 28.8 times fuel use - without discounts\n    let base = sum(this.units.map(u => u.fuel_consumption));\n    let factor = 28.8;\n    return round6(base * factor);\n  }\n\n  get soft_attack() {\n    return round6(sum(this.units.map(u => u.soft_attack)))\n  }\n\n  get hard_attack() {\n    return round6(sum(this.units.map(u => u.hard_attack)))\n  }\n\n  get air_attack() {\n    return round6(sum(this.units.map(u => u.air_attack)))\n  }\n\n  get defense() {\n    return round6(sum(this.units.map(u => u.defense)))\n  }\n\n  get breakthrough() {\n    return round6(sum(this.units.map(u => u.breakthrough)))\n  }\n\n  get ic_cost() {\n    return sum(this.units.map(u => u.ic_cost))\n  }\n\n  get entrenchment() {\n    let base = 5;\n    let units = sum(this.units.map(u => u.entrenchment))\n    let doctrine_bonus = this.country.divisionBonuses[\"max_dig_in\"];\n    return base + units + doctrine_bonus;\n  }\n\n  get reliability_factor() {\n    return sum(this.units.map(u => u.reliability_factor))\n  }\n\n  get casualty_trickleback() {\n    return sum(this.units.map(u => u.casualty_trickleback))\n  }\n\n  get equipment_capture_factor() {\n    return sum(this.units.map(u => u.equipment_capture_factor))\n  }\n\n  get experience_loss_factor() {\n    return sum(this.units.map(u => u.experience_loss_factor))\n  }\n\n  get recon() {\n    return sum(this.units.map(u => u.recon))\n  }\n\n  get initiative() {\n    return sum(this.units.map(u => u.initiative))\n  }\n\n  get frontline_units() {\n    return this.units.filter(u => u.is_frontline)\n  }\n\n  get support_units() {\n    return this.units.filter(u => !u.is_frontline)\n  }\n\n  get speed() {\n    let frontline_units = this.frontline_units;\n    if (frontline_units.length === 0) {\n      return null;\n    }\n    let base = min(frontline_units.map(u => u.speed));\n    let factor = this.country.divisionBonuses[\"army_speed_factor\"] || 0;\n    return round3(base * (1 + factor));\n  }\n\n  get armor() {\n    let mx = max(this.units.map(u => u.armor));\n    let wa = avg(this.units.map(u => u.armor));\n    return round3(0.3 * mx + 0.7 * wa);\n  }\n\n  get piercing() {\n    let mx = max(this.units.map(u => u.piercing));\n    let wa = avg(this.units.map(u => u.piercing));\n    return round3(0.4 * mx + 0.6 * wa)\n  }\n\n  get can_be_parachuted() {\n    return this.units.every(u => u.can_be_parachuted) ? \"Yes\" : \"No\"\n  }\n\n  get special_forces() {\n    return this.units.filter(u => u.special_forces).length\n  }\n\n  get hardness() {\n    let unit_hardness = this.frontline_units.map(u => u.hardness);\n    if (unit_hardness.length === 0) {\n      return 0;\n    }\n    return round6(avg(unit_hardness));\n  }\n\n  get equipment() {\n    let result = new Map();\n    for (let unit of this.units) {\n      for (let [equipment, count] of unit.equipment) {\n        let otherCount = result.get(equipment) || 0;\n        result.set(equipment, count + otherCount);\n      }\n    }\n    return result;\n  }\n\n  // average of frontlines + sum of supports\n  terrainBonusfor (terrain, bonus) {\n    let values = this.groupUnitStats(unit => (unit.terrain_bonuses[terrain] || {})[bonus] || 0);\n    let frontlineValues = values.filter(({unit}) => unit.is_frontline);\n    let supportValues = values.filter(({unit}) => !unit.is_frontline)\n    let baseValue = frontlineValues.map(({count, value}) => count*value).reduce((a,b) => a+b, 0.0);\n    let bonusValue = supportValues.map(({value}) => value).reduce((a,b) => a+b, 0.0);\n\n    let value = baseValue / this.frontline_units.length + bonusValue;\n\n    // If there are all 0s, don't show anything\n    // Otherwise show 0.0% with tooltip if calculations add up to 0.0%\n    if (values.every(({value}) => value === 0)) {\n      return { value: 0 };\n    }\n\n    let format = (value) => {\n      return sprintf(\"%+.1f%%\", value * 100);\n    }\n\n    let unitData = frontlineValues.map(({unit,count,value}) => ({unit,count,value:format(value)}));\n    let secondaryData = supportValues.filter(({value}) => value !== 0).map(({unit,count,value}) => ({unit,count,value:format(value)}));\n\n    let tooltipData = {\n      header: \"Average of frontline units:\",\n      unitData,\n    };\n    if (secondaryData.length > 0) {\n      tooltipData.secondaryHeader = \"Modified by support units:\";\n      tooltipData.secondaryData = secondaryData;\n    }\n    return { value, tooltipData };\n  }\n\n  get terrain_bonuses() {\n    let terrains = new Set();\n    for (let unit of this.units) {\n      for (let terrain of Object.keys(unit.terrain_bonuses)) {\n        terrains.add(terrain);\n      }\n    }\n    let result = {};\n    for (let terrain of terrains) {\n      result[terrain] = {\n        movement: this.terrainBonusfor (terrain, \"movement\"),\n        attack: this.terrainBonusfor (terrain, \"attack\"),\n        defence: this.terrainBonusfor (terrain, \"defence\"),\n      };\n    }\n    return result;\n  }\n\n  missingEquipment() {\n    let result = new Set();\n    for (let unit of this.units) {\n      unit.missingEquipment.forEach(eq => {\n        result.add(eq)\n      })\n    }\n    return result;\n  }\n\n  // These are sort of UI maters:\n  warnings() {\n    let result = [];\n    let frontline_units = this.frontline_units;\n    let frontline_count = frontline_units.length;\n    let support_count = this.support_units.length;\n    let infantry = frontline_units.filter((u) => u.group === \"infantry\").length;\n    let mobile = frontline_units.filter((u) => u.group === \"mobile\").length;\n    let armored = frontline_units.filter((u) => u.group === \"armor\").length;\n    let brigades = Math.ceil(infantry/5) + Math.ceil(mobile/5) + Math.ceil(armored/5);\n    let missingEquipment = this.missingEquipment();\n\n    if (frontline_count === 0) {\n      result.push(\"No frontline battalions\");\n    }\n    if (frontline_count > 25) {\n      result.push(`${frontline_count}/25 frontline battalions`);\n    }\n    else if (brigades > 5) {\n      // No need to use this warning if there\"s just too many units\n      result.push(`${brigades}/5 brigades`);\n    }\n    if (support_count > 5) {\n      result.push(`${support_count}/5 support companies`);\n    }\n    for (let eq of missingEquipment) {\n      result.push(`Missing equipment: ${eq}`);\n    }\n    return result;\n  }\n\n  groupUnitStats(field) {\n    let unitData = new Map();\n    for (let unit of this.units) {\n      let value;\n      if (typeof field === \"string\") {\n        value = unit[field];\n      } else {\n        value = field(unit);\n      }\n      if (typeof(value) === \"number\") {\n        value = round6(value);\n      }\n      if (unitData.has(unit)) {\n        let count = unitData.get(unit).count + 1;\n        unitData.set(unit, {unit, count, value});\n      } else {\n        let count = 1;\n        unitData.set(unit, {unit, count, value});\n      }\n    }\n    return [...unitData.values()]\n  }\n\n  groupFrontlineUnitStats(field) {\n    return this.groupUnitStats(field).filter(({unit}) => unit.is_frontline)\n  }\n\n  tooltipForSum(field) {\n    return ({\n      header: \"Sum of:\",\n      unitData: this.groupUnitStats(field).filter(({value}) => value !== 0),\n    })\n  }\n\n  tooltipForEntrenchment() {\n    let result = {\n      header: \"Sum of:\",\n      base: 5,\n      unitData: this.groupUnitStats(\"entrenchment\").filter(({value}) => value !== 0),\n    };\n    let factor = this.country.divisionBonuses[\"max_dig_in\"];\n    if (factor !== 0) {\n      result.techHeader = \"Modified by doctrine:\"\n      result.techData = this.techBonusesFor(\"max_dig_in\")\n    }\n    return result;\n  }\n\n  tooltipForArmor() {\n    return ({\n      header: \"30% max / 70% average of:\",\n      unitData: this.groupUnitStats(\"armor\"),\n    })\n  }\n\n  tooltipForPiercing() {\n    return ({\n      header: \"40% max / 60% average of:\",\n      unitData: this.groupUnitStats(\"piercing\"),\n    })\n  }\n\n  tooltipForSuppression() {\n    let result = {\n      header: \"Sum of:\",\n      unitData: this.groupUnitStats(\"suppression\").filter(({value}) => value !== 0),\n    }\n    let secondaryData = this.groupUnitStats(\"suppression_factor\").filter(({value}) => value !== 0);\n    if (secondaryData.length > 0) {\n      result.secondaryHeader = \"Modified by:\"\n      result.secondaryData = secondaryData.map(({unit,count,value}) => ({unit, count, value: sprintf(\"%+f%%\", 100*value)}));\n    }\n    return result;\n  }\n\n  tooltipForSupplyUse() {\n    let result = {\n      header: \"Sum of:\",\n      unitData: this.groupUnitStats(\"supply_use\").filter(({value}) => value !== 0),\n    };\n    let secondaryData = this.groupUnitStats(\"supply_consumption_factor\").filter(({value}) => value !== 0);\n    if (secondaryData.length > 0) {\n      result.secondaryHeader = \"Modified by:\"\n      result.secondaryData = secondaryData.map(({unit,count,value}) => ({unit, count, value: sprintf(\"%+f%%\", 100*value)}));\n    }\n    let factor = this.country.divisionBonuses[\"supply_consumption_factor\"];\n    if (factor !== 0) {\n      result.techHeader = \"Modified by doctrine:\"\n      result.techData = this\n        .techBonusesFor(\"supply_consumption_factor\")\n        .map(({name, value}) => ({name, value: sprintf(\"%+f%%\", 100*value)}))\n    }\n    return result;\n  }\n\n  tooltipForFuelUse() {\n    let result = {\n      header: \"Sum of:\",\n      unitData: this.groupUnitStats(\"fuel_consumption\").filter(({value}) => value !== 0),\n    };\n    let secondaryData = this.groupUnitStats(\"fuel_consumption_factor\").filter(({value}) => value !== 0);\n    if (secondaryData.length > 0) {\n      result.secondaryHeader = \"Modified by:\"\n      result.secondaryData = secondaryData.map(({unit,count,value}) => ({unit, count, value: sprintf(\"%+f%%\", 100*value)}));\n    }\n    return result;\n  }\n\n  techBonusesFor(field) {\n    return this\n      .country\n      .technologies\n      .map(tech => ({name: tech.name, value: tech[field]}))\n      .filter(({value}) => (value||0) !== 0)\n  }\n\n  tooltipForSpeed() {\n    let result = {\n      header: \"Minimum of frontline units:\",\n      unitData: this.groupFrontlineUnitStats(\"speed\").map(({unit,count,value}) => ({unit, count, value: formatSpeed(value)})),\n    };\n    let factor = this.country.divisionBonuses[\"army_speed_factor\"];\n    if (factor !== 0) {\n      result.techHeader = \"Modified by doctrine:\"\n      result.techData = this\n        .techBonusesFor(\"army_speed_factor\")\n        .map(({name, value}) => ({name, value: sprintf(\"%+f%%\", 100*value)}))\n    }\n    return result;\n  }\n\n  tooltipForOrganization() {\n    return ({\n      header: \"Average of:\",\n      unitData: this.groupFrontlineUnitStats(\"org\"),\n    })\n  }\n\n  tooltipForRecoveryRate() {\n    return ({\n      header: \"Average of:\",\n      unitData: this.groupFrontlineUnitStats(\"recovery_rate\"),\n    })\n  }\n\n  tooltipForHardness() {\n    return ({\n      header: \"Average of frontline units:\",\n      unitData: this.groupFrontlineUnitStats(\"hardness\").map(({unit,count,value}) => ({unit, count, value: sprintf(\"%.1f %%\", 100*value)})),\n    })\n  }\n\n  tooltipForCanBeParachuted() {\n    return ({\n      header: \"If all frontline units can:\",\n      unitData: this.groupFrontlineUnitStats(\"can_be_parachuted\").map(({unit,count,value}) => ({unit, count, value: value ? \"Yes\" : \"No\"})),\n    })\n  }\n\n  tooltipForSpecialForces() {\n    return ({\n      header: \"Count of:\",\n      unitData: this.groupFrontlineUnitStats(\"special_forces\")\n        .filter(({value}) => value)\n        .map(({unit,count,value}) => ({unit, count, value: \"Yes\"})),\n    })\n  }\n\n  tooltipForTrainingTime() {\n    return ({\n      header: \"Max of:\",\n      unitData: this.groupUnitStats(\"training_time\").map(({unit,count,value}) => ({unit, count, value: `${value} days`})),\n    })\n  }\n}\n","// In principle other stats could get upgrades too\nlet upgradableStats = new Set([\n  \"air_agility\",\n  \"air_attack\",\n  \"air_bombing\",\n  \"air_ground_attack\",\n  \"air_range\",\n  \"anti_air_attack\",\n  \"ap_attack\",\n  \"armor_value\",\n  \"attack\",\n  \"carrier_size\",\n  \"evasion\",\n  \"fire_range\",\n  \"hard_attack\",\n  \"maximum_speed\",\n  \"naval_range\",\n  \"naval_speed\",\n  \"naval_strike_attack\",\n  \"reliability\",\n  \"shore_bombardment\",\n  \"soft_attack\",\n  \"sub_attack\",\n  \"sub_detection\",\n  \"sub_visibility\",\n  \"torpedo_attack\",\n]);\n\nfunction round6(x) {\n  return Math.round(x * 1000000) / 1000000;\n}\n\nexport default class Equipment {\n  constructor(db, equipmentType, upgrades) {\n    this.db = db;\n    this.equipmentType = equipmentType;\n    this.upgrades = upgrades;\n    let variantBonus = this.calculateVariantBonus();\n\n    for (let key in this.equipmentType) {\n      let base = this.equipmentType[key];\n      if (upgradableStats.has(key)) {\n        let bonus = variantBonus[key];\n        if (bonus) {\n          this[key] = round6(base * (1 + bonus));\n        } else {\n          this[key] = base;\n        }\n      } else {\n        this[key] = base;\n      }\n    }\n  }\n\n  calculateVariantBonus() {\n    let available_upgrades = this.equipmentType.upgrades || {};\n    let result = {};\n    for (let key in this.upgrades) {\n      let level = this.upgrades[key];\n      if (available_upgrades.indexOf(key) === -1) {\n        throw new Error(`Invalid upgrade ${key} for equipment ${this.equipmentType.key}`);\n      }\n      let upgrade = this.db.upgrades[key];\n      for (let stat in upgrade) {\n        if (stat === \"name\" || stat === \"max_level\" || stat === \"cost\" || stat === \"key\") {\n          continue;\n        }\n        let upgradeValue = upgrade[stat];\n        result[stat] = result[stat] || 0;\n        result[stat] = round6(result[stat] + level * upgradeValue);\n      }\n    }\n    return result;\n  }\n}\n","import Unit from \"./Unit\";\nimport Division from \"./Division\";\nimport Equipment from \"./Equipment\";\nimport recursivelyMerge from \"./recursivelyMerge\";\n\nexport default class Country {\n  constructor(db, technologies, upgrades) {\n    this.db = db;\n    this.technologies = technologies;\n    this.upgrades = upgrades;\n    this.equipmentMap = this.calculateEquipmentMap();\n    this.divisionBonuses = this.calculateDivisionBonuses();\n  }\n\n  calculateEquipmentMap() {\n    let result = {}\n    // Making a silly assumption that they're sorted asciibetically\n    // It seems to be right, as they're all X0, X1, X2 etc.\n    for (let name of this.enabledEquipmentTypes()) {\n      let equipment = this.db.equipmentTypes[name];\n      let archetype = equipment.archetype;\n      if (!result[archetype] || (equipment.key > result[archetype].key)) {\n        result[archetype] = equipment;\n      }\n    }\n    for (let name in result) {\n      let equipmentType = result[name];\n      let upgrades = this.upgrades[equipmentType.key] || {};\n      result[name] = new Equipment(this.db, equipmentType, upgrades);\n    }\n    return result;\n  }\n\n  availableUnits() {\n    let {db} = this;\n    let result = [];\n    let enabledSubunits = this.enabledSubunits();\n    let enabledEquipmentArchetypes = this.enabledEquipmentArchetypes();\n    for (let name in db.unitTypes) {\n      let unitType = db.unitTypes[name];\n      if (unitType.active || enabledSubunits.has(name)) {\n        let equipmentNeeded = Object.keys(unitType.equipment);\n        if (equipmentNeeded.every(eq => enabledEquipmentArchetypes.has(eq))) {\n          result.push(unitType);\n        }\n      }\n    }\n    return result;\n  }\n\n  division(unitTypes) {\n    let {db} = this;\n    let units = [];\n    for (let name in unitTypes) {\n      let unitType = db.unitTypes[name];\n      if (!unitType) {\n        throw new Error(`No such unit type: ${name}`)\n      }\n      let count = unitTypes[name];\n      let unit = new Unit(unitType, this);\n      for (let i=0; i<count; i++) {\n        units.push(unit);\n      }\n    }\n    return new Division(this, units);\n  }\n\n  unitBonusesfor (unitName) {\n    let categories = [unitName, ...this.db.unitTypes[unitName].categories];\n    let result = {};\n    for (let technology of this.technologies) {\n      for (let category of categories) {\n        if (technology.unit_bonuses[category]) {\n          recursivelyMerge(result, technology.unit_bonuses[category]);\n        }\n      }\n    }\n    return result;\n  }\n\n  calculateDivisionBonuses() {\n    let result = {\n      max_dig_in: 0,\n      supply_consumption_factor: 0,\n      army_speed_factor: 0,\n    };\n    for(let tech of this.technologies) {\n      result.max_dig_in += (tech.max_dig_in || 0);\n      result.supply_consumption_factor += (tech.supply_consumption_factor || 0);\n      result.army_speed_factor += (tech.army_speed_factor || 0);\n    }\n    return result;\n  }\n\n  enabledSubunits() {\n    let {technologies} = this;\n    let result = new Set();\n    for (let tech of technologies) {\n      for (let name of (tech.enable_subunits || [])) {\n        result.add(name);\n      }\n    }\n    return result;\n  }\n\n  enabledEquipmentTypes() {\n    let {technologies} = this;\n    let result = new Set();\n    for (let tech of technologies) {\n      for (let name of (tech.enable_equipments || [])) {\n        result.add(name);\n      }\n    }\n    return result;\n  }\n\n  enabledEquipmentArchetypes() {\n    let {db} = this;\n    let result = new Set();\n    for (let eq of this.enabledEquipmentTypes()) {\n      let archetype = db.equipmentTypes[eq].archetype;\n      result.add(archetype);\n    }\n    return result;\n  }\n}\n","import Country from \"./Country\";\nimport Equipment from \"./Equipment\";\nimport vanilla from \"./vanilla.json\";\nimport kaiserreich from \"./kaiserreich.json\";\n\nlet mods = {\n  vanilla, kaiserreich,\n};\n\nexport default class Database {\n  constructor(modName) {\n    let mod = mods[modName];\n    this.technology = mod.technology;\n    this.doctrines = mod.doctrines;\n    this.equipmentTypes = mod.equipment;\n    this.unitTypes = mod.units;\n    this.upgrades = mod.upgrades;\n    this.default_year = mod.default_year;\n    this.default_units = mod.default_units;\n    this.default_support = mod.default_support;\n\n    /* workarounds for limited collections API */\n    for (let key in this.technology) {\n      this.technology[key].key = key;\n    }\n    for (let key in this.equipmentTypes) {\n      this.equipmentTypes[key].key = key;\n    }\n    for (let key in this.unitTypes) {\n      this.unitTypes[key].key = key;\n    }\n    for (let key in this.upgrades) {\n      this.upgrades[key].key = key;\n    }\n    this.fallbackEquipmentMap = this.calculateFallbackEquipmentMap();\n  }\n\n  availableYears() {\n    let years = new Set();\n    for (let tech of Object.values(this.technology)) {\n      let year = tech.start_year;\n      if (year) {\n        years.add(year);\n      }\n    }\n    return [...years].sort();\n  }\n\n  availableDoctrines() {\n    return Object.keys(this.doctrines);\n  }\n\n  technologiesForYear(year) {\n    let techs = [];\n    if (year) {\n      for (let name in this.technology) {\n        let tech = this.technology[name];\n        if (tech.start_year && tech.start_year <= year) {\n          techs.push(name);\n        }\n      }\n    }\n    if (!techs.length) {\n      return [\"infantry_weapons\"];\n    }\n    return techs;\n  }\n\n  technologiesForDoctrine(doctrine) {\n    return this.doctrines[doctrine] || [];\n  }\n\n  country(year, doctrine, upgrades) {\n    let techs = [...this.technologiesForYear(year), ...this.technologiesForDoctrine(doctrine)];\n    return new Country(this, techs.map(t => this.technology[t]), upgrades);\n  }\n\n  supportUnitTypes() {\n    return Object.keys(this.unitTypes).filter((u) => this.unitTypes[u].group === \"support\");\n  }\n\n  // Using any of these results in invalid division, but it won't crash app\n  // Pick oldest equipment for each archetype\n  calculateFallbackEquipmentMap() {\n    let result = {};\n    for (let name in this.equipmentTypes) {\n      let equipmentType = this.equipmentTypes[name];\n      let archetype = equipmentType.archetype;\n      if (!result[archetype] || (equipmentType.key < result[archetype].key)) {\n        result[archetype] = equipmentType;\n      }\n      for (let name in result) {\n        // FIXME: fallback equipment gets no variants, but they're still shown in UI\n        result[name] = new Equipment(this, result[name], {});\n      }\n    }\n    return result;\n  }\n}\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.scss\";\nimport Division from \"./components/Division\";\nimport Database from \"./database/Database\";\n\nclass App extends Component {\n  dbs = {\n    vanilla: new Database(\"vanilla\"),\n    kaiserreich: new Database(\"kaiserreich\"),\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Hearts of Iron IV - Division Designer</h1>\n        </header>\n        <Division dbs={this.dbs} />\n        <div className=\"footer-space\"></div>\n        <footer>\n          If you have any feedback, <a href=\"mailto:Tomasz.Wegrzanowski@gmail.com\">contact the author</a>, or <a href=\"https://github.com/taw/hoi4/issues\">report an issue on github</a>.\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}