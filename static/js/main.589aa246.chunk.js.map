{"version":3,"sources":["logo.svg","components/StatTooltip.js","components/Stat.js","components/Basics.js","components/DivisionName.js","components/Doctrine.js","components/Technology.js","components/Unit.js","components/Units.js","components/Warnings.js","components/Choices.js","components/Combat.js","components/Upgrade.js","components/Upgrades.js","components/Equipment.js","components/EquipmentList.js","components/SupportEntry.js","components/Support.js","components/TerrainCell.js","components/TerrainRow.js","components/Terrain.js","components/ModSelector.js","components/SaveAndLoadDivision.js","components/Division.js","database/recursivelyMerge.js","database/Unit.js","database/Division.js","database/Equipment.js","database/Country.js","database/Database.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","StatTooltip","data","this","props","header","unitData","secondaryHeader","secondaryData","react_default","a","createElement","className","map","_ref","index","unit","count","value","key","name","_ref2","Component","Stat","_this$props","tooltipData","StatTooltip_StatTooltip","Basics","hasData","Object","slicedToArray","Stat_Stat","assign","Choices","divisionName","placeholderName","changeName","type","placeholder","onChange","e","target","Doctrine","handleChange","event","_this","changeDoctrine","db","doctrine","react","availableDoctrines","val","Technology","changeYear","year","availableYears","Unit","normalizeCount","_unit","normalizedCount","parseInt","handleChangeCount","_this$props2","handleChangeType","_this$props3","_this$props4","country","_unit2","allFrontline","values","unitTypes","filter","combat_width","availableFrontline","availableUnits","min","onBlur","disabled","indexOf","Units","changeUnits","units","newUnits","toConsumableArray","length","pop","push","_this2","Unit_Unit","Warnings","warnings","warning","DivisionName_Choices","Technology_Technology","Doctrine_Doctrine","Units_Units","Warnings_Warnings","Combat","Upgrade","upgrade","newValue","max_level","level","replace","max","Upgrades","upgradeKey","equipment","upgrades","availableUpgradeKeys","equipmentType","availableUpgrades","n","Upgrade_Upgrade","EquipmentList","cost","onUpgradeChange","Upgrades_Upgrades","Equipment_EquipmentList","SupportEntry","checked","onSupportChange","available","selected","shortName","Support","row","SupportEntry_SupportEntry","TerrainCell","_this$props$data","valuePretty","sprintf","TerrainRow","mov","atk","def","charAt","toUpperCase","substr","capitalize","TerrainCell_TerrainCell","Terrain","TerrainRow_TerrainRow","ModSelector","changeMod","onClick","SaveAndLoadDivision","state","counter","selection","loadClicked","savedDivisions","onLoad","saveClicked","saved","saveData","window","localStorage","setItem","JSON","stringify","setState","getItem","parse","changeSelection","loadSelection","loadButton","division","concat","Division","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","modName","dbs","default_year","default_units","support","default_support","changeUpgrade","equipmentKey","newLevel","oldState","objectSpread","defineProperty","handleLoad","savedData","handleSupportChange","company","vanilla","_this$state","Choices_Choices","Support_Support","Basics_Basics","basics","EquipmentList_EquipmentList","equipmentUsed","Combat_Combat","combat","Terrain_Terrain","terrain","ModSelector_ModSelector","SaveAndLoadDivision_SaveAndLoadDivision","_this$state2","_this$state3","unitsTypes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_ref3","unitName","err","return","supportName","supportUnitTypes","recursivelyMerge","base","extra","Error","unitType","missingEquipment","Set","Map","equipmentMap","set","fallbackEquipment","fallbackEquipmentMap","add","country_bonuses","unitBonusesfor","stat","keys","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","group","calculateFromUnitTypeAndBonus","hp","supply_use","calculateFromEquipmentAndBonusMult","factor","own_equipment_fuel_consumption_mult","fuel_consumption","manpower","training_time","weight","special_forces","can_be_parachuted","org","recovery_rate","result","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","build_cost_ic","equipmentSpeeds","maximum_speed","s","Math","apply","terrain_bonuses","sum","avg","round3","x","round","round6","cleanupReport","report","v","_ref4","k","t","formatSpeed","speed","tooltipForSpeed","tooltipForSum","tooltipForOrganization","tooltipForRecoveryRate","suppression","tooltipForSuppression","tooltipForSupplyUse","fuel_use","tooltipForFuelUse","fuel_capacity","recon","entrenchment","reliability_factor","casualty_trickleback","experience_loss_factor","tooltipForCanBeParachuted","tooltipForSpecialForces","tooltipForTrainingTime","ic_cost","_ref7","_ref6","soft_attack","hard_attack","defense","breakthrough","armor","tooltipForArmor","piercing","tooltipForPiercing","hardness","tooltipForHardness","initiative","equipment_capture_factor","bonuses","sort","bonus","movement","attack","defence","groupUnitStats","frontlineValues","_ref8","is_frontline","supportValues","_ref9","baseValue","_ref10","reduce","b","bonusValue","_ref11","frontline_units","every","_ref12","format","_ref13","_ref14","_ref15","forEach","eq","frontline_count","support_count","support_units","infantry","u","mobile","armored","brigades","ceil","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","field","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","has","get","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","groupFrontlineUnitStats","_ref27","_ref28","_ref29","_ref30","_ref31","_ref32","suppression_factor","supply_consumption_factor","fuel_consumption_factor","air_attack","unit_hardness","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_ref35","_ref34","otherCount","terrains","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_arr","_i","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","terrainBonusfor","upgradableStats","Equipment","variantBonus","calculateVariantBonus","available_upgrades","upgradeValue","Country","technologies","calculateEquipmentMap","enabledEquipmentTypes","equipmentTypes","archetype","enabledSubunits","enabledEquipmentArchetypes","active","i","categories","technology","category","unit_bonuses","tech","enable_subunits","enable_equipments","mods","kaiserreich","millennium_dawn","Database","mod","doctrines","calculateFallbackEquipmentMap","years","start_year","techs","technologiesForYear","technologiesForDoctrine","App","src","logo","alt","Division_Division","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.589aa246.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\n\nexport default class StatTooltip extends Component {\n  render() {\n    let { data } = this.props;\n    if (!data) {\n      return null;\n    }\n    let { header, unitData, secondaryHeader, secondaryData } = data;\n    return <div className=\"stat-tooltip\">\n      <div>{ header }</div>\n      <table>\n        <tbody>\n          { unitData.map(({unit, count, value}, index) => (\n            <tr key={index}>\n              <td className=\"substat-count\">{count}x</td>\n              <td className=\"substat-name\">{unit.name}</td>\n              <td className=\"substat-value\">{value}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      { secondaryHeader && <div>{ secondaryHeader }</div> }\n      { secondaryData && <table>\n        <tbody>\n          { secondaryData.map(({unit, count, value}, index) => (\n            <tr key={index}>\n              <td className=\"substat-count\">{count}x</td>\n              <td className=\"substat-name\">{unit.name}</td>\n              <td className=\"substat-value\">{value}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      }\n\n    </div>\n  }\n}\n","import React, { Component } from \"react\";\nimport StatTooltip from \"./StatTooltip\";\n\nexport default class Stat extends Component {\n  render() {\n    let { name, value, tooltipData } = this.props;\n    return <li className=\"stat\">\n      <span className=\"stat-name\">{name}</span>\n      <span className=\"stat-value\">{value}</span>\n      <StatTooltip data={tooltipData} />\n    </li>\n  }\n}\n","import React, { Component } from \"react\";\nimport Stat from \"./Stat\";\n\nexport default class Basics extends Component {\n  render() {\n    let { data, hasData } = this.props;\n    if (!hasData) {\n      return <div className=\"basics\">\n        <h4>Basics</h4>\n        <div>Division has no units</div>\n      </div>\n    }\n    return <div className=\"basics\">\n      <h4>Basics</h4>\n      <ul>\n        {\n          data.map(([name, value, tooltipData]) => <Stat key={name} {...{name, value, tooltipData}} />)\n        }\n      </ul>\n    </div>\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Choices extends Component {\n  render() {\n    let { divisionName, placeholderName, changeName } = this.props;\n    return <div>\n      <h4>Name</h4>\n      <input type=\"text\" value={divisionName} placeholder={placeholderName} onChange={(e) => changeName(e.target.value)}/>\n    </div>\n  }\n}\n","import React, { Component, Fragment } from \"react\";\n\nexport default class Doctrine extends Component {\n  handleChange = (event) => {\n    let value = event.target.value;\n    this.props.changeDoctrine(value);\n  }\n  render() {\n    let {db, doctrine} = this.props;\n    return <Fragment>\n      <h4>Doctrine</h4>\n      <select value={doctrine || \"\"} onChange={this.handleChange}>\n        <option value=\"\" key=\"\">-</option>\n        {\n          db.availableDoctrines().map(val => <option key={val} value={val}>{val}</option>)\n        }\n      </select>\n    </Fragment>\n  }\n}\n\n","import React, { Component, Fragment } from \"react\";\n\nexport default class Technology extends Component {\n  handleChange = (event) => {\n    let value = event.target.value;\n    this.props.changeYear(value);\n  }\n  render() {\n    let {db, year} = this.props;\n    return <Fragment>\n      <h4>Technology</h4>\n      <select value={year || \"\"} onChange={this.handleChange}>\n        <option value=\"\" key=\"\">-</option>\n        {\n          db.availableYears().map(val => <option key={val} value={val}>{val}</option>)\n        }\n      </select>\n    </Fragment>\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Unit extends Component {\n  normalizeCount = (event) => {\n    let {index, unit, onChange} = this.props;\n    let [count, type] = unit;\n    let normalizedCount = parseInt(count, 10);\n    if (count !== normalizedCount) {\n      onChange(index, [normalizedCount, type]);\n    }\n  }\n\n  handleChangeCount = (event) => {\n    let count = event.target.value;\n    // A hack to convert once done, but still allow temporary bad values like \"\"\n    if (count === \"\"+parseInt(count, 10)) {\n      count = parseInt(count, 10);\n    }\n    let {index, unit, onChange} = this.props;\n    let type = unit[1];\n    onChange(index, [count, type]);\n  }\n  handleChangeType = (event) => {\n    let type = event.target.value;\n    let {index, unit, onChange} = this.props;\n    let count = unit[0];\n    onChange(index, [count, type]);\n  }\n  render() {\n    let {country, unit} = this.props;\n    let [count, type] = unit;\n\n    let allFrontline = Object.values(country.db.unitTypes).filter(unit => unit.combat_width > 0);\n    let availableFrontline = country.availableUnits().filter(unit => unit.combat_width > 0).map(unit => unit.key);\n\n    return <div className=\"unit-select\">\n      <input type=\"number\" min=\"0\" value={\"\"+count} onChange={this.handleChangeCount} onBlur={this.normalizeCount} />\n      <select value={type} onChange={this.handleChangeType}>\n        {\n          allFrontline.map(unit => <option disabled={availableFrontline.indexOf(unit.key) === -1} key={unit.key} value={unit.key}>{unit.name}</option> )\n        }\n      </select>\n    </div>\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport Unit from \"./Unit\";\n\nexport default class Units extends Component {\n  handleChange = (index, unit) => {\n    let {changeUnits, units} = this.props;\n    let newUnits = [...units];\n    newUnits[index] = unit;\n\n    // Try to maintain just one empty slot\n    while (\n      newUnits.length >= 2 &&\n      newUnits[newUnits.length-1][0] === 0 &&\n      newUnits[newUnits.length-2][0] === 0\n    ) {\n      newUnits.pop();\n    }\n    if (newUnits[newUnits.length-1][0] !== 0) {\n      newUnits.push([0, \"infantry\"]);\n    }\n    changeUnits(newUnits);\n  }\n\n  render() {\n    let {db, country, units} = this.props;\n    return <Fragment>\n      <h4>Battalions</h4>\n      {\n        units.map((unit, index) => (\n          <Unit {...{db, unit, country}} key={index} index={index} onChange={this.handleChange} />\n        ))\n      }\n    </Fragment>\n  }\n}\n","import React, { Component, Fragment } from \"react\";\n\nexport default class Warnings extends Component {\n  render() {\n    let {warnings} = this.props;\n    if (warnings.length === 0) {\n      return null;\n    }\n\n    return <Fragment>\n      <h4>Warnings</h4>\n      {\n        warnings.map((warning, index) => (\n          <div key={index} className=\"alert alert-danger\">{warning}</div>\n        ))\n      }\n    </Fragment>\n  }\n}\n","import React, { Component } from \"react\";\nimport DivisionName from \"./DivisionName\";\nimport Doctrine from \"./Doctrine\";\nimport Technology from \"./Technology\";\nimport Units from \"./Units\";\nimport Warnings from \"./Warnings\";\n\nexport default class Choices extends Component {\n  render() {\n    let {db, country, year, doctrine, units, warnings, changeYear, changeDoctrine, changeUnits, divisionName, placeholderName, changeName} = this.props;\n    return <div className=\"choices\">\n      <DivisionName {...{divisionName, placeholderName, changeName}} />\n      <Technology {...{db, year, changeYear}} />\n      <Doctrine {...{db, doctrine, changeDoctrine}} />\n      <Units {...{db, country, units, changeUnits}} />\n      <Warnings {...{warnings}} />\n    </div>\n  }\n}\n","import React, { Component } from \"react\";\nimport Stat from \"./Stat\";\n\nexport default class Combat extends Component {\n  render() {\n    let { data, hasData } = this.props;\n    if (!hasData) {\n      return <div className=\"combat\">\n        <h4>Basics</h4>\n        <div>Division has no units</div>\n      </div>\n    }\n\n    return <div className=\"combat\">\n      <h4>Combat</h4>\n      <ul>\n        {\n          data.map(([name, value, tooltipData]) => <Stat key={name} {...{name, value, tooltipData}} />)\n        }\n      </ul>\n    </div>\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Upgrade extends Component {\n  handleChange = (event) => {\n    let {upgrade, onChange} = this.props;\n    let newValue = parseInt(event.target.value, 10);\n    if (newValue < 0) {\n      newValue = 0;\n    }\n    if (newValue > upgrade.max_level) {\n      newValue = upgrade.max_level;\n    }\n    onChange(upgrade.key, newValue);\n  }\n\n  render() {\n    let {upgrade, level} = this.props;\n    let name = upgrade.name.replace(/ Armament/, \"\");\n\n    return <div className=\"upgrade\">\n      {name}\n      <input type=\"number\" min={0} max={upgrade.max_level} value={level} onChange={this.handleChange}/>\n    </div>\n  }\n}\n","import React, { Component } from \"react\";\nimport Upgrade from \"./Upgrade\";\n\nexport default class Upgrades extends Component {\n  handleChange = (upgradeKey, newValue) => {\n    let {equipment,onChange} = this.props;\n    onChange(equipment.key, upgradeKey, newValue);\n  }\n\n  render() {\n    let {equipment,upgrades} = this.props;\n    let availableUpgradeKeys = equipment.equipmentType.upgrades || [];\n    if (!availableUpgradeKeys.length) {\n      return null;\n    }\n    let db = equipment.db;\n    let availableUpgrades = availableUpgradeKeys.map(n => db.upgrades[n]);\n\n    return <div>\n      {\n        availableUpgrades.map(upgrade => (\n          <Upgrade key={upgrade.key} upgrade={upgrade} level={upgrades[upgrade.key] || 0} onChange={this.handleChange} />\n        ))\n      }\n    </div>\n  }\n}\n","import React, { Component } from \"react\";\nimport Upgrades from \"./Upgrades\";\n\nexport default class EquipmentList extends Component {\n  render() {\n    let {equipment, count, cost, upgrades, onUpgradeChange} = this.props;\n\n    return <li key={equipment.key}>\n      <div className=\"equipment-count\">\n        <span>{equipment.name}</span>\n        <span>{count} ({cost})</span>\n      </div>\n      <Upgrades equipment={equipment} upgrades={upgrades} onChange={onUpgradeChange} />\n    </li>\n  }\n}\n\n","import React, { Component } from \"react\";\nimport Equipment from \"./Equipment\";\n\nexport default class EquipmentList extends Component {\n  render() {\n    let {data, hasData, upgrades, onUpgradeChange} = this.props;\n    if (!hasData) {\n      return <div className=\"equipment-list\">\n        <h4>Equipment</h4>\n        <div>Division has no units</div>\n      </div>\n    }\n\n    return <div className=\"equipment-list\">\n      <h4>Equipment</h4>\n      <ul>\n        {\n          data.map(([equipment, count, cost]) =>\n            <Equipment {...{equipment, count, cost, onUpgradeChange}} key={equipment.key} upgrades={upgrades[equipment.key] || {}} />\n          )\n        }\n      </ul>\n    </div>\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class SupportEntry extends Component {\n  handleChange = (event) => {\n    let value = event.target.checked;\n    let {data, onSupportChange} = this.props;\n    onSupportChange(data.key, value);\n  }\n  render() {\n    let {data} = this.props;\n    let {name, available, selected} = data;\n    let shortName = name.replace(/^Support /, \"\").replace(/ Company$/, \"\");\n    return <div className={available ? \"checkbox\" : \"checkbox disabled\"} >\n      <label className=\"control-label\">\n        <input type=\"checkbox\" checked={selected} disabled={!available} onChange={this.handleChange} />\n        {shortName}\n      </label>\n    </div>;\n  }\n}\n","import React, { Component } from \"react\";\nimport SupportEntry from \"./SupportEntry\";\n\nexport default class Support extends Component {\n  render() {\n    let {data, onSupportChange} = this.props;\n    return <div className=\"support\">\n      <h4>Support</h4>\n      <div className=\"list\">\n        {\n          data.map((row, index) =>\n            <SupportEntry key={index} data={row} onSupportChange={onSupportChange} />\n          )\n        }\n      </div>\n    </div>;\n  }\n}\n","import React, { Component } from \"react\";\nimport {sprintf} from \"sprintf-js\";\nimport StatTooltip from \"./StatTooltip\";\n\nexport default class TerrainCell extends Component {\n  render() {\n    let {value, tooltipData} = this.props.data;\n\n    if (!tooltipData) {\n      return <td></td>;\n    }\n\n    let className = (value >= 0) ? \"bonus stat-value\" : \"penalty stat-value\";\n    let valuePretty = sprintf(\"%+.1f%%\", value*100);\n\n    return <td className=\"terrain-cell\">\n      <span className={className}>{valuePretty}</span>\n      <StatTooltip data={tooltipData} />\n    </td>\n  }\n}\n","import React, { Component } from \"react\";\nimport TerrainCell from \"./TerrainCell\";\n\nlet capitalize = (name) => {\n  return name.charAt(0).toUpperCase() + name.substr(1);\n}\n\nexport default class TerrainRow extends Component {\n  render() {\n    let [name, mov, atk, def] = this.props.data;\n    return <tr>\n      <td>{capitalize(name)}</td>\n      <TerrainCell data={mov} />\n      <TerrainCell data={atk} />\n      <TerrainCell data={def} />\n    </tr>\n  }\n}\n","import React, { Component } from \"react\";\nimport TerrainRow from \"./TerrainRow\";\n\nexport default class Terrain extends Component {\n  render() {\n    let { data } = this.props;\n    if (data.length === 0) {\n      return <div className=\"terrain\">\n        <h4>Terrain</h4>\n        <div>Division has no terrain bonuses</div>\n      </div>\n    }\n\n    return <div className=\"terrain\">\n      <h4>Terrain</h4>\n      <table>\n        <thead>\n          <tr>\n            <th>Terrain</th>\n            <th>Movement</th>\n            <th>Attack</th>\n            <th>Defense</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            data.map((row, index) => <TerrainRow data={row} key={index}/>)\n          }\n        </tbody>\n      </table>\n    </div>\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class ModSelector extends Component {\n  render() {\n    let {changeMod} = this.props;\n    return <div className=\"mod-selector\">\n      <span>Switch mod:</span>\n      <button className=\"btn btn-primary\" onClick={() => changeMod(\"vanilla\")}>Vanilla (1.6.0)</button>\n      <button className=\"btn btn-primary\" onClick={() => changeMod(\"kaiserreich\")}>Kaiserreich (0.8.3 for 1.5.4)</button>\n      <button className=\"btn btn-primary\" onClick={() => changeMod(\"millennium_dawn\")}>Millennium Dawn (0.3.0 for 1.5.4)</button>\n    </div>\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class SaveAndLoadDivision extends Component {\n  state = {\n    counter: 1,\n    selection: 0,\n  }\n  loadClicked = () => {\n    let saved = this.savedDivisions();\n    let selected = saved[this.state.selection];\n    this.props.onLoad(selected);\n  }\n  saveClicked = () => {\n    let saved = this.savedDivisions();\n    saved.push(this.props.saveData);\n    window.localStorage.setItem(\"saved-hoi4-divisions\", JSON.stringify(saved));\n    // Force refresh\n    this.setState({counter: this.state.counter + 1, selection: 0});\n  }\n  savedDivisions = () => {\n    let saved = window.localStorage.getItem(\"saved-hoi4-divisions\");\n    if (!saved) {\n      return [];\n    } else {\n      return JSON.parse(saved);\n    }\n  }\n  changeSelection = (event) => {\n    this.setState({selection: event.target.value});\n  }\n  render() {\n    let saved = this.savedDivisions();\n    let loadSelection, loadButton;\n    if (saved.length >= 1) {\n      loadSelection = <select value={this.state.selection} onChange={this.changeSelection}>\n        {\n          saved.map((division, key) => (\n            <option key={key} value={key}>{ division.divisionName || `Division ${key+1}` }</option>\n          ))\n        }\n      </select>\n      loadButton = <button className=\"btn btn-primary\" onClick={this.loadClicked}>Load division</button>\n    }\n    return (\n      <div className=\"save-and-load-controls\">\n        <button className=\"btn btn-primary\" onClick={this.saveClicked}>Save division</button>\n        { loadSelection }\n        { loadButton }\n      </div>\n    )\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport Basics from \"./Basics\";\nimport Choices from \"./Choices\";\nimport Combat from \"./Combat\";\nimport EquipmentList from \"./EquipmentList\";\nimport Support from \"./Support\";\nimport Terrain from \"./Terrain\";\nimport ModSelector from \"./ModSelector\";\nimport SaveAndLoadDivision from \"./SaveAndLoadDivision\";\n\nexport default class Division extends Component {\n  constructor(props) {\n    super(props);\n    let {dbs} = props;\n    this.dbs = dbs;\n    let db = this.dbs.vanilla;\n    this.state = {\n      modName: \"vanilla\",\n      year: db.default_year,\n      doctrine: null,\n      units: db.default_units,\n      support: db.default_support,\n      upgrades: {},\n      divisionName: \"\",\n    }\n  }\n  get db() {\n    return this.dbs[this.state.modName];\n  }\n  changeMod = (modName) => {\n    let db = this.dbs[modName];\n    this.setState({\n      modName: modName,\n      year: db.default_year,\n      doctrine: null,\n      units: db.default_units,\n      support: db.default_support,\n      upgrades: {},\n      divisionName: \"\",\n    })\n  }\n  changeYear = (year) => {\n    this.setState({year});\n  }\n  changeDoctrine = (doctrine) => {\n    this.setState({doctrine});\n  }\n  changeUnits = (units) => {\n    this.setState({units});\n  }\n  changeName = (divisionName) => {\n    this.setState({divisionName});\n  }\n  changeUpgrade = (equipmentKey, upgradeKey, newLevel) => {\n    this.setState(oldState => ({\n      upgrades: {\n        ...oldState.upgrades,\n        [equipmentKey]: {\n          ...(oldState.upgrades[equipmentKey] || {}),\n          [upgradeKey]: newLevel,\n        },\n      },\n    }));\n  }\n  handleLoad = (savedData) => {\n    this.setState(savedData);\n  }\n  render() {\n    let db = this.db;\n    let placeholderName = \"My Division\";\n    let {year, doctrine, units, upgrades, divisionName} = this.state;\n    let {changeYear, changeDoctrine, changeUnits, changeName} = this;\n    let country = this.country();\n    let division = this.division();\n    let warnings = division.warnings();\n    let hasData = (division.units.length !== 0);\n\n    return <Fragment>\n      <div className=\"division-box\">\n        <Choices {...{db, country, year, doctrine, units, changeYear, changeDoctrine, changeUnits, warnings, divisionName, placeholderName, changeName}} />\n        <Support data={this.support()} onSupportChange={this.handleSupportChange} />\n        <Basics data={division.basics()} hasData={hasData} />\n        <EquipmentList data={division.equipmentUsed()} hasData={hasData} upgrades={upgrades} onUpgradeChange={this.changeUpgrade} />\n        <Combat data={division.combat()}  hasData={hasData} />\n        <Terrain data={division.terrain()}/>\n      </div>\n      <ModSelector changeMod={this.changeMod} />\n      <SaveAndLoadDivision onLoad={this.handleLoad} saveData={this.state} />\n    </Fragment>\n  }\n  handleSupportChange = (company, state) => {\n    let {support} = this.state;\n    support = {...support, [company]: state};\n    this.setState({support});\n  }\n  country() {\n    let {year, doctrine, upgrades} = this.state;\n    let db = this.db;\n    return db.country(year, doctrine, upgrades);\n  }\n  division() {\n    let {units, support} = this.state;\n    let unitsTypes = {};\n    let country = this.country();\n    for (let [count, unitName] of units) {\n      if (count) {\n        unitsTypes[unitName] = (unitsTypes[unitName] || 0) + parseInt(count, 10);\n      }\n    }\n    for (let supportName in support) {\n      if (support[supportName]) {\n        unitsTypes[supportName] = 1;\n      }\n    }\n    return country.division(unitsTypes);\n  }\n\n  support() {\n    let db = this.db;\n    let { support } = this.state;\n    let unitTypes = db.unitTypes;\n    let supportUnitTypes = db.supportUnitTypes();\n    let country = this.country();\n    let available = country.availableUnits().map((unit) => unit.key);\n    return supportUnitTypes.map((key) => ({\n      key,\n      name: unitTypes[key].name,\n      available: (available.indexOf(key) !== -1),\n      selected: !!(support[key]),\n    }))\n  }\n}\n","let recursivelyMerge = (base, extra) => {\n  for (let key in extra) {\n    let val = extra[key];\n    if (key in base) {\n      if (typeof(val) === \"object\") {\n        if (typeof(base[key]) !== \"object\") {\n          throw new Error(\"Incompatible merge\")\n        }\n        recursivelyMerge(base[key], val)\n      } else if (typeof(val) === \"number\") {\n        if (typeof(base[key]) !== \"number\") {\n          throw new Error(\"Incompatible merge\")\n        }\n        base[key] = base[key] + val;\n      } else {\n        throw new Error(\"Not sure how to merge\")\n      }\n    } else {\n      if (typeof(val) === \"object\") {\n        base[key] = {};\n        recursivelyMerge(base[key], val)\n      } else if (typeof(val) === \"number\") {\n        base[key] = val;\n      } else {\n        throw new Error(\"Not sure how to merge\")\n      }\n    }\n  }\n}\n\nexport default recursivelyMerge;\n","import recursivelyMerge from \"./recursivelyMerge\";\n\nexport default class Unit {\n  constructor(unitType, country) {\n    this.unitType = unitType;\n    this.country = country;\n\n    this.missingEquipment = new Set();\n    this.equipment = new Map();\n    for (let name in unitType.equipment) {\n      let count = unitType.equipment[name];\n      let equipment = country.equipmentMap[name];\n      if (equipment) {\n        this.equipment.set(equipment, count);\n      } else {\n        let fallbackEquipment = country.db.fallbackEquipmentMap[name];\n        if (!fallbackEquipment) {\n          throw new Error(`Can't find ${name}`);\n        }\n        this.equipment.set(fallbackEquipment, count);\n        this.missingEquipment.add(fallbackEquipment.name);\n      }\n    }\n    this.country_bonuses = country.unitBonusesfor(unitType.key);\n  }\n\n  get group() {\n    return this.unitType.group;\n  }\n\n  get suppression() {\n    return this.calculateFromUnitTypeAndBonus(\"suppression\");\n  }\n\n  get suppression_factor() {\n    return this.calculateFromUnitTypeAndBonus(\"suppression_factor\");\n  }\n\n  get hp() {\n    return this.unitType.hp;\n  }\n\n  get supply_use() {\n    return this.unitType.supply_use;\n  }\n\n  get fuel_consumption() {\n    let base = this.calculateFromEquipmentAndBonusMult(\"fuel_consumption\");\n    let factor = this.unitType.own_equipment_fuel_consumption_mult;\n    if (factor == null) {\n      factor = 1;\n    }\n    return base * factor;\n  }\n\n  get fuel_capacity() {\n    return 28.8 * this.fuel_consumption;\n  }\n\n  get manpower() {\n    return this.unitType.manpower;\n  }\n\n  get training_time() {\n    return this.unitType.training_time;\n  }\n\n  get weight() {\n    return this.unitType.weight;\n  }\n\n  get special_forces() {\n    return this.unitType.special_forces;\n  }\n\n  get can_be_parachuted() {\n    return this.unitType.can_be_parachuted;\n  }\n\n  get name() {\n    return this.unitType.name;\n  }\n\n  get org() {\n    let base = this.unitType.org;\n    return base + (this.country_bonuses[\"max_organisation\"] || 0)\n  }\n\n  get recovery_rate() {\n    let base = this.unitType.recovery_rate;\n    return base + (this.country_bonuses[\"default_morale\"] || 0)\n  }\n\n  get reliability_factor() {\n    return this.calculateFromUnitTypeAndBonus(\"reliability_factor\");\n  }\n\n  get casualty_trickleback() {\n    return this.calculateFromUnitTypeAndBonus(\"casualty_trickleback\");\n  }\n\n  get experience_loss_factor() {\n    return this.calculateFromUnitTypeAndBonus(\"experience_loss_factor\");\n  }\n\n  get initiative() {\n    return this.calculateFromUnitTypeAndBonus(\"initiative\");\n  }\n\n  get equipment_capture_factor() {\n    return this.calculateFromUnitTypeAndBonus(\"equipment_capture_factor\")\n  }\n\n  get supply_consumption_factor() {\n    return this.calculateFromUnitTypeAndBonus(\"supply_consumption_factor\")\n  }\n\n  get fuel_consumption_factor() {\n    return this.calculateFromUnitTypeAndBonus(\"fuel_consumption_factor\")\n  }\n\n  get combat_width() {\n    return this.calculateFromUnitTypeAndBonus(\"combat_width\");\n  }\n\n  get is_frontline() {\n    return this.combat_width > 0;\n  }\n\n  get recon() {\n    return this.calculateFromUnitTypeAndBonus(\"recon\")\n  }\n\n  get entrenchment() {\n    return this.calculateFromUnitTypeAndBonus(\"entrenchment\")\n  }\n\n  get soft_attack() {\n    return this.calculateFromEquipmentAndBonusMult(\"soft_attack\")\n  }\n\n  get hard_attack() {\n    return this.calculateFromEquipmentAndBonusMult(\"hard_attack\")\n  }\n\n  get air_attack() {\n    return this.calculateFromEquipmentAndBonusMult(\"air_attack\")\n  }\n\n  get defense() {\n    return this.calculateFromEquipmentAndBonusMult(\"defense\")\n  }\n\n  get breakthrough() {\n    return this.calculateFromEquipmentAndBonusMult(\"breakthrough\")\n  }\n\n  get piercing() {\n    return this.calculateFromEquipmentAndBonusMult(\"ap_attack\")\n  }\n\n  get armor() {\n    // never any bonus, but doesn't hurt\n    return this.calculateFromEquipmentAndBonusMult(\"armor_value\")\n  }\n\n  get hardness() {\n    return this.calculateFromEquipmentAndBonusMult(\"hardness\")\n  }\n\n  calculateFromUnitTypeAndBonus(stat) {\n    let base = this.unitType[stat] || 0;\n    return base + (this.country_bonuses[stat] || 0)\n  }\n\n  calculateFromEquipmentAndBonus(stat) {\n    let base = 0;\n    for (let equipment of this.equipment.keys()) {\n      base += equipment[stat];\n    }\n    return base + (this.country_bonuses[stat] || 0)\n  }\n\n  calculateFromEquipmentAndBonusMult(stat) {\n    let base = 0;\n    for (let equipment of this.equipment.keys()) {\n      base += (equipment[stat] || 0);\n    }\n\n    return base * (1 + (this.unitType[stat] || 0) + (this.country_bonuses[stat] || 0))\n  }\n\n  get ic_cost() {\n    let result = 0;\n    for (let [equipment, count] of this.equipment) {\n      result += equipment.build_cost_ic * count;\n    }\n    return result;\n  }\n\n  get speed() {\n    // Unclear what to do when multiply types are used. Mot uses mot(12)+inf(4)\n    let equipment = [...this.equipment.keys()]\n    let equipmentSpeeds = equipment.map(e => e.maximum_speed).filter(s => s);\n    let equipmentSpeed = equipmentSpeeds.length ? Math.max(...equipmentSpeeds) : 4.0;\n    return equipmentSpeed * (1 + this.unitType.maximum_speed || 0)\n  }\n\n  get terrain_bonuses() {\n    let result = {};\n    recursivelyMerge(result, this.unitType.terrain_bonuses);\n    if (this.country_bonuses.terrain_bonuses) {\n      recursivelyMerge(result, this.country_bonuses.terrain_bonuses);\n    }\n    return result;\n  }\n}\n","import {sprintf} from \"sprintf-js\";\n\nfunction sum(values) {\n  let result = 0;\n  for (let value of values) {\n    result += value;\n  }\n  return result;\n}\n\nfunction max(values) {\n  return Math.max(...values);\n}\n\nfunction min(values) {\n  return Math.min(...values);\n}\n\nfunction avg(values) {\n  if (values.length === 0) return;\n  return sum(values) / values.length;\n}\n\nfunction round3(x) {\n  return Math.round(x * 1000) / 1000;\n}\n\nfunction round6(x) {\n  return Math.round(x * 1000000) / 1000000;\n}\n\nfunction cleanupReport(report) {\n  report = report.filter(([k,v,t]) => (v !== 0));\n  return report.map(([k,v,t]) => {\n    if (typeof(v) === \"number\") {\n      return [k,round6(v),t];\n    } else {\n      return [k,v,t];\n    }\n  })\n}\n\nfunction formatSpeed(value) {\n  if (!value) {\n    return 0;\n  }\n  return sprintf(\"%.1f km/h\", value);\n}\n\nexport default class Division {\n  constructor(units) {\n    this.units = units;\n  }\n\n  // Gather related numbers for frontend\"s convenience\n  // This is sort of UI responsibility\n  basics() {\n    return cleanupReport([\n      [\"Speed\", formatSpeed(this.speed), this.tooltipForSpeed()],\n      [\"HP\", this.hp, this.tooltipForSum(\"hp\")],\n      [\"Organization\", this.org, this.tooltipForOrganization()],\n      [\"Recovery rate\", this.recovery_rate, this.tooltipForRecoveryRate()],\n      [\"Suppression\", this.suppression, this.tooltipForSuppression()],\n      [\"Weight\", this.weight, this.tooltipForSum(\"weight\")],\n      [\"Supply Use\", this.supply_use, this.tooltipForSupplyUse()],\n      [\"Fuel Use\", this.fuel_use, this.tooltipForFuelUse()],\n      [\"Fuel Capacity\", this.fuel_capacity, this.tooltipForSum(\"fuel_capacity\")],\n      [\"Recon\", this.recon, this.tooltipForSum(\"recon\")],\n      [\"Entrenchment\", this.entrenchment, this.tooltipForSum(\"entrenchment\")],\n      [\"Reliability\", this.reliability_factor, this.tooltipForSum(\"reliability_factor\")],\n      [\"Casualty trickleback\", this.casualty_trickleback, this.tooltipForSum(\"casualty_trickleback\")],\n      [\"XP Loss\", this.experience_loss_factor, this.tooltipForSum(\"experience_loss_factor\")],\n      [\"Can be parachuted\", this.can_be_parachuted, this.tooltipForCanBeParachuted()],\n      [\"Special forces\", this.special_forces, this.tooltipForSpecialForces()],\n      [\"Manpower\", this.manpower, this.tooltipForSum(\"manpower\")],\n      [\"Training Time\", `${this.training_time} days`, this.tooltipForTrainingTime()],\n      [\"IC Cost\", this.ic_cost, this.tooltipForSum(\"ic_cost\")],\n    ])\n  }\n\n  equipmentUsed() {\n    let result = [];\n    for (let [equipment, count] of this.equipment) {\n      if (count > 0) {\n        result.push([equipment, count, round6(equipment.build_cost_ic * count)]);\n      }\n    }\n    return result;\n  }\n\n  combat() {\n    return cleanupReport([\n      [\"Soft Attack\", this.soft_attack, this.tooltipForSum(\"soft_attack\")],\n      [\"Hard Attack\", this.hard_attack, this.tooltipForSum(\"hard_attack\")],\n      [\"Defense\", this.defense, this.tooltipForSum(\"defense\")],\n      [\"Breakthrough\", this.breakthrough, this.tooltipForSum(\"breakthrough\")],\n      [\"Armor\", this.armor, this.tooltipForArmor()],\n      [\"Piercing\", this.piercing, this.tooltipForPiercing()],\n      [\"Combat width\", this.combat_width, this.tooltipForSum(\"combat_width\")],\n      [\"Hardness\", sprintf(\"%.1f %%\", 100*this.hardness), this.tooltipForHardness()],\n      [\"Initiative\", this.initiative, this.tooltipForSum(\"initiative\")],\n      [\"Equipment Capture\", this.equipment_capture_factor, this.tooltipForSum(\"equipment_capture_factor\")],\n    ])\n  }\n\n  terrain() {\n    let bonuses = this.terrain_bonuses;\n    return Object.keys(bonuses).sort().map(name => {\n      let bonus = bonuses[name];\n      return [name, bonus.movement, bonus.attack, bonus.defence];\n    })\n  }\n\n  // Individual numbers\n  get manpower() {\n    return sum(this.units.map(u => u.manpower))\n  }\n\n  get training_time() {\n    return max(this.units.map(u => u.training_time))\n  }\n\n  get combat_width() {\n    return sum(this.units.map(u => u.combat_width))\n  }\n\n  get hp() {\n    return sum(this.units.map(u => u.hp))\n  }\n\n  get org() {\n    return round3(avg(this.units.map(u => u.org)))\n  }\n\n  get weight() {\n    return sum(this.units.map(u => u.weight))\n  }\n\n  get recovery_rate() {\n    return round3(avg(this.units.map(u => u.recovery_rate)))\n  }\n\n  get suppression() {\n    let base = sum(this.units.map(u => u.suppression));\n    let factor = sum(this.units.map(u => u.suppression_factor));\n    return round6(base * (1+factor));\n  }\n\n  get supply_use() {\n    let base = sum(this.units.map(u => u.supply_use));\n    let factor = sum(this.units.map(u => u.supply_consumption_factor));\n    return round6(base * (1+factor));\n  }\n\n  get fuel_use() {\n    let base = sum(this.units.map(u => u.fuel_consumption));\n    let factor = sum(this.units.map(u => u.fuel_consumption_factor));\n    return round6(base * (1+factor));\n  }\n\n  get fuel_capacity() {\n    // It's 28.8 times fuel use - without discounts\n    let base = sum(this.units.map(u => u.fuel_consumption));\n    let factor = 28.8;\n    return round6(base * factor);\n  }\n\n  get soft_attack() {\n    return round6(sum(this.units.map(u => u.soft_attack)))\n  }\n\n  get hard_attack() {\n    return round6(sum(this.units.map(u => u.hard_attack)))\n  }\n\n  get air_attack() {\n    return round6(sum(this.units.map(u => u.air_attack)))\n  }\n\n  get defense() {\n    return round6(sum(this.units.map(u => u.defense)))\n  }\n\n  get breakthrough() {\n    return round6(sum(this.units.map(u => u.breakthrough)))\n  }\n\n  get ic_cost() {\n    return sum(this.units.map(u => u.ic_cost))\n  }\n\n  get entrenchment() {\n    return sum(this.units.map(u => u.entrenchment))\n  }\n\n  get reliability_factor() {\n    return sum(this.units.map(u => u.reliability_factor))\n  }\n\n  get casualty_trickleback() {\n    return sum(this.units.map(u => u.casualty_trickleback))\n  }\n\n  get equipment_capture_factor() {\n    return sum(this.units.map(u => u.equipment_capture_factor))\n  }\n\n  get experience_loss_factor() {\n    return sum(this.units.map(u => u.experience_loss_factor))\n  }\n\n  get recon() {\n    return sum(this.units.map(u => u.recon))\n  }\n\n  get initiative() {\n    return sum(this.units.map(u => u.initiative))\n  }\n\n  get frontline_units() {\n    return this.units.filter(u => u.is_frontline)\n  }\n\n  get support_units() {\n    return this.units.filter(u => !u.is_frontline)\n  }\n\n  get speed() {\n    let frontline_units = this.frontline_units;\n    if (frontline_units.length === 0) {\n      return null;\n    }\n    return min(frontline_units.map(u => u.speed))\n  }\n\n  get armor() {\n    let mx = max(this.units.map(u => u.armor));\n    let wa = avg(this.units.map(u => u.armor));\n    return round3(0.3 * mx + 0.7 * wa);\n  }\n\n  get piercing() {\n    let mx = max(this.units.map(u => u.piercing));\n    let wa = avg(this.units.map(u => u.piercing));\n    return round3(0.4 * mx + 0.6 * wa)\n  }\n\n  get can_be_parachuted() {\n    return this.units.every(u => u.can_be_parachuted) ? \"Yes\" : \"No\"\n  }\n\n  get special_forces() {\n    return this.units.filter(u => u.special_forces).length\n  }\n\n  get hardness() {\n    let unit_hardness = this.frontline_units.map(u => u.hardness);\n    if (unit_hardness.length === 0) {\n      return 0;\n    }\n    return round6(avg(unit_hardness));\n  }\n\n  get equipment() {\n    let result = new Map();\n    for (let unit of this.units) {\n      for (let [equipment, count] of unit.equipment) {\n        let otherCount = result.get(equipment) || 0;\n        result.set(equipment, count + otherCount);\n      }\n    }\n    return result;\n  }\n\n  // average of frontlines + sum of supports\n  terrainBonusfor (terrain, bonus) {\n    let values = this.groupUnitStats(unit => (unit.terrain_bonuses[terrain] || {})[bonus] || 0);\n    let frontlineValues = values.filter(({unit}) => unit.is_frontline);\n    let supportValues = values.filter(({unit}) => !unit.is_frontline)\n    let baseValue = frontlineValues.map(({count, value}) => count*value).reduce((a,b) => a+b, 0.0);\n    let bonusValue = supportValues.map(({value}) => value).reduce((a,b) => a+b, 0.0);\n\n    let value = baseValue / this.frontline_units.length + bonusValue;\n\n    // If there are all 0s, don't show anything\n    // Otherwise show 0.0% with tooltip if calculations add up to 0.0%\n    if (values.every(({value}) => value === 0)) {\n      return { value: 0 };\n    }\n\n    let format = (value) => {\n      return sprintf(\"%+.1f%%\", value * 100);\n    }\n\n    let unitData = frontlineValues.map(({unit,count,value}) => ({unit,count,value:format(value)}));\n    let secondaryData = supportValues.filter(({value}) => value !== 0).map(({unit,count,value}) => ({unit,count,value:format(value)}));\n\n    let tooltipData = {\n      header: \"Average of frontline units:\",\n      unitData,\n    };\n    if (secondaryData.length > 0) {\n      tooltipData.secondaryHeader = \"Modified by support units:\";\n      tooltipData.secondaryData = secondaryData;\n    }\n    return { value, tooltipData };\n  }\n\n  get terrain_bonuses() {\n    let terrains = new Set();\n    for (let unit of this.units) {\n      for (let terrain of Object.keys(unit.terrain_bonuses)) {\n        terrains.add(terrain);\n      }\n    }\n    let result = {};\n    for (let terrain of terrains) {\n      result[terrain] = {\n        movement: this.terrainBonusfor (terrain, \"movement\"),\n        attack: this.terrainBonusfor (terrain, \"attack\"),\n        defence: this.terrainBonusfor (terrain, \"defence\"),\n      };\n    }\n    return result;\n  }\n\n  missingEquipment() {\n    let result = new Set();\n    for (let unit of this.units) {\n      unit.missingEquipment.forEach(eq => {\n        result.add(eq)\n      })\n    }\n    return result;\n  }\n\n  // These are sort of UI maters:\n  warnings() {\n    let result = [];\n    let frontline_units = this.frontline_units;\n    let frontline_count = frontline_units.length;\n    let support_count = this.support_units.length;\n    let infantry = frontline_units.filter((u) => u.group === \"infantry\").length;\n    let mobile = frontline_units.filter((u) => u.group === \"mobile\").length;\n    let armored = frontline_units.filter((u) => u.group === \"armor\").length;\n    let brigades = Math.ceil(infantry/5) + Math.ceil(mobile/5) + Math.ceil(armored/5);\n    let missingEquipment = this.missingEquipment();\n\n    if (frontline_count === 0) {\n      result.push(\"No frontline battalions\");\n    }\n    if (frontline_count > 25) {\n      result.push(`${frontline_count}/25 frontline battalions`);\n    }\n    else if (brigades > 5) {\n      // No need to use this warning if there\"s just too many units\n      result.push(`${brigades}/5 brigades`);\n    }\n    if (support_count > 5) {\n      result.push(`${support_count}/5 support companies`);\n    }\n    for (let eq of missingEquipment) {\n      result.push(`Missing equipment: ${eq}`);\n    }\n    return result;\n  }\n\n  groupUnitStats(field) {\n    let unitData = new Map();\n    for (let unit of this.units) {\n      let value;\n      if (typeof field === \"string\") {\n        value = unit[field];\n      } else {\n        value = field(unit);\n      }\n      if (typeof(value) === \"number\") {\n        value = round6(value);\n      }\n      if (unitData.has(unit)) {\n        let count = unitData.get(unit).count + 1;\n        unitData.set(unit, {unit, count, value});\n      } else {\n        let count = 1;\n        unitData.set(unit, {unit, count, value});\n      }\n    }\n    return [...unitData.values()]\n  }\n\n  groupFrontlineUnitStats(field) {\n    return this.groupUnitStats(field).filter(({unit}) => unit.is_frontline)\n  }\n\n  tooltipForSum(field) {\n    return ({\n      header: \"Sum of:\",\n      unitData: this.groupUnitStats(field).filter(({value}) => value !== 0),\n    })\n  }\n\n  tooltipForArmor() {\n    return ({\n      header: \"30% max / 70% average of:\",\n      unitData: this.groupUnitStats(\"armor\"),\n    })\n  }\n\n  tooltipForPiercing() {\n    return ({\n      header: \"40% max / 60% average of:\",\n      unitData: this.groupUnitStats(\"piercing\"),\n    })\n  }\n\n  tooltipForSuppression() {\n    let result = {\n      header: \"Sum of:\",\n      unitData: this.groupUnitStats(\"suppression\").filter(({value}) => value !== 0),\n    }\n    let secondaryData = this.groupUnitStats(\"suppression_factor\").filter(({value}) => value !== 0);\n    if (secondaryData.length > 0) {\n      result.secondaryHeader = \"Modified by:\"\n      result.secondaryData = secondaryData.map(({unit,count,value}) => ({unit, count, value: sprintf(\"%+f%%\", 100*value)}));\n    }\n    return result;\n  }\n\n  tooltipForSupplyUse() {\n    let result = {\n      header: \"Sum of:\",\n      unitData: this.groupUnitStats(\"supply_use\").filter(({value}) => value !== 0),\n    };\n    let secondaryData = this.groupUnitStats(\"supply_consumption_factor\").filter(({value}) => value !== 0);\n    if (secondaryData.length > 0) {\n      result.secondaryHeader = \"Modified by:\"\n      result.secondaryData = secondaryData.map(({unit,count,value}) => ({unit, count, value: sprintf(\"%+f%%\", 100*value)}));\n    }\n    return result;\n  }\n\n  tooltipForFuelUse() {\n    let result = {\n      header: \"Sum of:\",\n      unitData: this.groupUnitStats(\"fuel_consumption\").filter(({value}) => value !== 0),\n    };\n    let secondaryData = this.groupUnitStats(\"fuel_consumption_factor\").filter(({value}) => value !== 0);\n    if (secondaryData.length > 0) {\n      result.secondaryHeader = \"Modified by:\"\n      result.secondaryData = secondaryData.map(({unit,count,value}) => ({unit, count, value: sprintf(\"%+f%%\", 100*value)}));\n    }\n    return result;\n  }\n\n  tooltipForSpeed() {\n    return ({\n      header: \"Minimum of frontline units:\",\n      unitData: this.groupFrontlineUnitStats(\"speed\").map(({unit,count,value}) => ({unit, count, value: formatSpeed(value)})),\n    })\n  }\n\n  tooltipForOrganization() {\n    return ({\n      header: \"Average of:\",\n      unitData: this.groupFrontlineUnitStats(\"org\"),\n    })\n  }\n\n  tooltipForRecoveryRate() {\n    return ({\n      header: \"Average of:\",\n      unitData: this.groupFrontlineUnitStats(\"recovery_rate\"),\n    })\n  }\n\n  tooltipForHardness() {\n    return ({\n      header: \"Average of frontline units:\",\n      unitData: this.groupFrontlineUnitStats(\"hardness\").map(({unit,count,value}) => ({unit, count, value: sprintf(\"%.1f %%\", 100*value)})),\n    })\n  }\n\n  tooltipForCanBeParachuted() {\n    return ({\n      header: \"If all frontline units can:\",\n      unitData: this.groupFrontlineUnitStats(\"can_be_parachuted\").map(({unit,count,value}) => ({unit, count, value: value ? \"Yes\" : \"No\"})),\n    })\n  }\n\n  tooltipForSpecialForces() {\n    return ({\n      header: \"Count of:\",\n      unitData: this.groupFrontlineUnitStats(\"special_forces\")\n        .filter(({value}) => value)\n        .map(({unit,count,value}) => ({unit, count, value: \"Yes\"})),\n    })\n  }\n\n  tooltipForTrainingTime() {\n    return ({\n      header: \"Max of:\",\n      unitData: this.groupUnitStats(\"training_time\").map(({unit,count,value}) => ({unit, count, value: `${value} days`})),\n    })\n  }\n}\n","// In principle other stats could get upgrades too\nlet upgradableStats = new Set([\n  \"air_agility\",\n  \"air_attack\",\n  \"air_bombing\",\n  \"air_ground_attack\",\n  \"air_range\",\n  \"anti_air_attack\",\n  \"ap_attack\",\n  \"armor_value\",\n  \"attack\",\n  \"carrier_size\",\n  \"evasion\",\n  \"fire_range\",\n  \"hard_attack\",\n  \"maximum_speed\",\n  \"naval_range\",\n  \"naval_speed\",\n  \"naval_strike_attack\",\n  \"reliability\",\n  \"shore_bombardment\",\n  \"soft_attack\",\n  \"sub_attack\",\n  \"sub_detection\",\n  \"sub_visibility\",\n  \"torpedo_attack\",\n]);\n\nfunction round6(x) {\n  return Math.round(x * 1000000) / 1000000;\n}\n\nexport default class Equipment {\n  constructor(db, equipmentType, upgrades) {\n    this.db = db;\n    this.equipmentType = equipmentType;\n    this.upgrades = upgrades;\n    let variantBonus = this.calculateVariantBonus();\n\n    for (let key in this.equipmentType) {\n      let base = this.equipmentType[key];\n      if (upgradableStats.has(key)) {\n        let bonus = variantBonus[key];\n        if (bonus) {\n          this[key] = round6(base * (1 + bonus));\n        } else {\n          this[key] = base;\n        }\n      } else {\n        this[key] = base;\n      }\n    }\n  }\n\n  calculateVariantBonus() {\n    let available_upgrades = this.equipmentType.upgrades || {};\n    let result = {};\n    for (let key in this.upgrades) {\n      let level = this.upgrades[key];\n      if (available_upgrades.indexOf(key) === -1) {\n        throw new Error(`Invalid upgrade ${key} for equipment ${this.equipmentType.key}`);\n      }\n      let upgrade = this.db.upgrades[key];\n      for (let stat in upgrade) {\n        if (stat === \"name\" || stat === \"max_level\" || stat === \"cost\" || stat === \"key\") {\n          continue;\n        }\n        let upgradeValue = upgrade[stat];\n        result[stat] = result[stat] || 0;\n        result[stat] = round6(result[stat] + level * upgradeValue);\n      }\n    }\n    return result;\n  }\n}\n","import Unit from \"./Unit\";\nimport Division from \"./Division\";\nimport Equipment from \"./Equipment\";\nimport recursivelyMerge from \"./recursivelyMerge\";\n\nexport default class Country {\n  constructor(db, technologies, upgrades) {\n    this.db = db;\n    this.technologies = technologies;\n    this.upgrades = upgrades;\n    this.equipmentMap = this.calculateEquipmentMap();\n  }\n\n  calculateEquipmentMap() {\n    let result = {}\n    // Making a silly assumption that they're sorted asciibetically\n    // It seems to be right, as they're all X0, X1, X2 etc.\n    for (let name of this.enabledEquipmentTypes()) {\n      let equipment = this.db.equipmentTypes[name];\n      let archetype = equipment.archetype;\n      if (!result[archetype] || (equipment.key > result[archetype].key)) {\n        result[archetype] = equipment;\n      }\n    }\n    for (let name in result) {\n      let equipmentType = result[name];\n      let upgrades = this.upgrades[equipmentType.key] || {};\n      result[name] = new Equipment(this.db, equipmentType, upgrades);\n    }\n    return result;\n  }\n\n  availableUnits() {\n    let {db} = this;\n    let result = [];\n    let enabledSubunits = this.enabledSubunits();\n    let enabledEquipmentArchetypes = this.enabledEquipmentArchetypes();\n    for (let name in db.unitTypes) {\n      let unitType = db.unitTypes[name];\n      if (unitType.active || enabledSubunits.has(name)) {\n        let equipmentNeeded = Object.keys(unitType.equipment);\n        if (equipmentNeeded.every(eq => enabledEquipmentArchetypes.has(eq))) {\n          result.push(unitType);\n        }\n      }\n    }\n    return result;\n  }\n\n  division(unitTypes) {\n    let {db} = this;\n    let units = [];\n    for (let name in unitTypes) {\n      let unitType = db.unitTypes[name];\n      if (!unitType) {\n        throw new Error(`No such unit type: ${name}`)\n      }\n      let count = unitTypes[name];\n      let unit = new Unit(unitType, this);\n      for (let i=0; i<count; i++) {\n        units.push(unit);\n      }\n    }\n    return new Division(units);\n  }\n\n  unitBonusesfor (unitName) {\n    let categories = [unitName, ...this.db.unitTypes[unitName].categories];\n    let result = {};\n    for (let technology of this.technologies) {\n      for (let category of categories) {\n        if (technology.unit_bonuses[category]) {\n          recursivelyMerge(result, technology.unit_bonuses[category]);\n        }\n      }\n    }\n    return result;\n  }\n\n  enabledSubunits() {\n    let {technologies} = this;\n    let result = new Set();\n    for (let tech of technologies) {\n      for (let name of (tech.enable_subunits || [])) {\n        result.add(name);\n      }\n    }\n    return result;\n  }\n\n  enabledEquipmentTypes() {\n    let {technologies} = this;\n    let result = new Set();\n    for (let tech of technologies) {\n      for (let name of (tech.enable_equipments || [])) {\n        result.add(name);\n      }\n    }\n    return result;\n  }\n\n  enabledEquipmentArchetypes() {\n    let {db} = this;\n    let result = new Set();\n    for (let eq of this.enabledEquipmentTypes()) {\n      let archetype = db.equipmentTypes[eq].archetype;\n      result.add(archetype);\n    }\n    return result;\n  }\n}\n","import Country from \"./Country\";\nimport Equipment from \"./Equipment\";\nimport vanilla from \"./vanilla.json\";\nimport kaiserreich from \"./kaiserreich.json\";\nimport millennium_dawn from \"./millennium_dawn.json\";\n\nlet mods = {\n  vanilla, kaiserreich, millennium_dawn,\n};\n\nexport default class Database {\n  constructor(modName) {\n    let mod = mods[modName];\n    this.technology = mod.technology;\n    this.doctrines = mod.doctrines;\n    this.equipmentTypes = mod.equipment;\n    this.unitTypes = mod.units;\n    this.upgrades = mod.upgrades;\n    this.default_year = mod.default_year;\n    this.default_units = mod.default_units;\n    this.default_support = mod.default_support;\n\n    /* workarounds for limited collections API */\n    for (let key in this.technology) {\n      this.technology[key].key = key;\n    }\n    for (let key in this.equipmentTypes) {\n      this.equipmentTypes[key].key = key;\n    }\n    for (let key in this.unitTypes) {\n      this.unitTypes[key].key = key;\n    }\n    for (let key in this.upgrades) {\n      this.upgrades[key].key = key;\n    }\n    this.fallbackEquipmentMap = this.calculateFallbackEquipmentMap();\n  }\n\n  availableYears() {\n    let years = new Set();\n    for (let tech of Object.values(this.technology)) {\n      let year = tech.start_year;\n      if (year) {\n        years.add(year);\n      }\n    }\n    return [...years].sort();\n  }\n\n  availableDoctrines() {\n    return Object.keys(this.doctrines);\n  }\n\n  technologiesForYear(year) {\n    let techs = [];\n    if (year) {\n      for (let name in this.technology) {\n        let tech = this.technology[name];\n        if (tech.start_year && tech.start_year <= year) {\n          techs.push(name);\n        }\n      }\n    }\n    if (!techs.length) {\n      return [\"infantry_weapons\"];\n    }\n    return techs;\n  }\n\n  technologiesForDoctrine(doctrine) {\n    return this.doctrines[doctrine] || [];\n  }\n\n  country(year, doctrine, upgrades) {\n    let techs = [...this.technologiesForYear(year), ...this.technologiesForDoctrine(doctrine)];\n    return new Country(this, techs.map(t => this.technology[t]), upgrades);\n  }\n\n  supportUnitTypes() {\n    return Object.keys(this.unitTypes).filter((u) => this.unitTypes[u].group === \"support\");\n  }\n\n  // Using any of these results in invalid division, but it won't crash app\n  // Pick oldest equipment for each archetype\n  calculateFallbackEquipmentMap() {\n    let result = {};\n    for (let name in this.equipmentTypes) {\n      let equipmentType = this.equipmentTypes[name];\n      let archetype = equipmentType.archetype;\n      if (!result[archetype] || (equipmentType.key < result[archetype].key)) {\n        result[archetype] = equipmentType;\n      }\n      for (let name in result) {\n        // FIXME: fallback equipment gets no variants, but they're still shown in UI\n        result[name] = new Equipment(this, result[name], {});\n      }\n    }\n    return result;\n  }\n}\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.scss\";\nimport Division from \"./components/Division\";\nimport Database from \"./database/Database\";\n\nclass App extends Component {\n  dbs = {\n    vanilla: new Database(\"vanilla\"),\n    kaiserreich: new Database(\"kaiserreich\"),\n    millennium_dawn: new Database(\"millennium_dawn\"),\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Hearts of Iron IV - Division Designer</h1>\n        </header>\n        <Division dbs={this.dbs} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}